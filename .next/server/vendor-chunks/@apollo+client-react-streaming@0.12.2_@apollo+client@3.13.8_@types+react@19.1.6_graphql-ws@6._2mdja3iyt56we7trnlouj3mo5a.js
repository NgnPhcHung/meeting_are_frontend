"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a";
exports.ids = ["vendor-chunks/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/index.ssr.js":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/index.ssr.js ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApolloClient: () => (/* binding */ ApolloClient),\n/* harmony export */   DataTransportContext: () => (/* binding */ DataTransportContext),\n/* harmony export */   DebounceMultipartResponsesLink: () => (/* binding */ AccumulateMultipartResponsesLink),\n/* harmony export */   InMemoryCache: () => (/* binding */ InMemoryCache),\n/* harmony export */   ReadFromReadableStreamLink: () => (/* binding */ ReadFromReadableStreamLink),\n/* harmony export */   RemoveMultipartDirectivesLink: () => (/* binding */ RemoveMultipartDirectivesLink),\n/* harmony export */   SSRMultipartLink: () => (/* binding */ SSRMultipartLink),\n/* harmony export */   TeeToReadableStreamLink: () => (/* binding */ TeeToReadableStreamLink),\n/* harmony export */   WrapApolloProvider: () => (/* binding */ WrapApolloProvider),\n/* harmony export */   built_for_ssr: () => (/* binding */ built_for_ssr),\n/* harmony export */   createTransportedQueryPreloader: () => (/* binding */ createTransportedQueryPreloader),\n/* harmony export */   isTransportedQueryRef: () => (/* binding */ isTransportedQueryRef),\n/* harmony export */   readFromReadableStream: () => (/* binding */ readFromReadableStream),\n/* harmony export */   resetApolloSingletons: () => (/* binding */ resetApolloSingletons),\n/* harmony export */   reviveTransportedQueryRef: () => (/* binding */ reviveTransportedQueryRef),\n/* harmony export */   skipDataTransport: () => (/* binding */ skipDataTransport),\n/* harmony export */   teeToReadableStream: () => (/* binding */ teeToReadableStream),\n/* harmony export */   useWrapTransportedQueryRef: () => (/* binding */ useWrapTransportedQueryRef)\n/* harmony export */ });\n/* harmony import */ var _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @apollo/client/index.js */ \"(ssr)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/link/core/ApolloLink.js\");\n/* harmony import */ var _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @apollo/client/index.js */ \"(ssr)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/cache/inmemory/inMemoryCache.js\");\n/* harmony import */ var _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @apollo/client/utilities/index.js */ \"(ssr)/./node_modules/.pnpm/zen-observable-ts@1.2.5/node_modules/zen-observable-ts/module.js\");\n/* harmony import */ var _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @apollo/client/index.js */ \"(ssr)/./node_modules/.pnpm/graphql-tag@2.12.6_graphql@16.11.0/node_modules/graphql-tag/lib/index.js\");\n/* harmony import */ var _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @apollo/client/index.js */ \"(ssr)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/core/ApolloClient.js\");\n/* harmony import */ var _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @apollo/client/utilities/index.js */ \"(ssr)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/utilities/graphql/directives.js\");\n/* harmony import */ var _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @apollo/client/utilities/index.js */ \"(ssr)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/utilities/common/incrementalResult.js\");\n/* harmony import */ var _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @apollo/client/utilities/index.js */ \"(ssr)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/utilities/graphql/transform.js\");\n/* harmony import */ var _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @apollo/client/utilities/index.js */ \"(ssr)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/utilities/graphql/print.js\");\n/* harmony import */ var ts_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-invariant */ \"(ssr)/./node_modules/.pnpm/ts-invariant@0.10.3/node_modules/ts-invariant/lib/invariant.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _wry_equality__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wry/equality */ \"(ssr)/./node_modules/.pnpm/@wry+equality@0.5.7/node_modules/@wry/equality/lib/index.js\");\n/* harmony import */ var _apollo_client_react_internal_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @apollo/client/react/internal/index.js */ \"(ssr)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/react/internal/cache/getSuspenseCache.js\");\n/* harmony import */ var _apollo_client_react_internal_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @apollo/client/react/internal/index.js */ \"(ssr)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/react/internal/cache/QueryReference.js\");\n/* harmony import */ var _apollo_client_react_index_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @apollo/client/react/index.js */ \"(ssr)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/react/hooks/useApolloClient.js\");\n/* harmony import */ var _apollo_client_react_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @apollo/client/react/index.js */ \"(ssr)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/react/context/ApolloProvider.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! graphql */ \"(ssr)/./node_modules/.pnpm/graphql@16.11.0/node_modules/graphql/utilities/stripIgnoredCharacters.mjs\");\n/* harmony import */ var _apollo_client_cache_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @apollo/client/cache/index.js */ \"(ssr)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/utilities/common/canonicalStringify.js\");\n/* harmony import */ var _apollo_client_react_streaming_stream_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @apollo/client-react-streaming/stream-utils */ \"(ssr)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/stream-utils.ssr.js\");\n\n\n\n\n\n\n\n\n\n\n\n// src/AccumulateMultipartResponsesLink.ts\nvar AccumulateMultipartResponsesLink = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_4__.ApolloLink {\n  maxDelay;\n  constructor(config) {\n    super();\n    this.maxDelay = config.cutoffDelay;\n  }\n  request(operation, forward) {\n    if (!forward) {\n      throw new Error(\"This is not a terminal link!\");\n    }\n    const operationContainsMultipartDirectives = (0,_apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.hasDirectives)(\n      [\"defer\"],\n      operation.query\n    );\n    const upstream = forward(operation);\n    if (!operationContainsMultipartDirectives)\n      return upstream;\n    const maxDelay = this.maxDelay;\n    let accumulatedData, maxDelayTimeout;\n    return new _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.Observable((subscriber) => {\n      const upstreamSubscription = upstream.subscribe({\n        next: (result) => {\n          if (accumulatedData) {\n            if (accumulatedData.data && \"incremental\" in result) {\n              accumulatedData.data = (0,_apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.mergeIncrementalData)(\n                accumulatedData.data,\n                result\n              );\n            } else if (result.data) {\n              accumulatedData.data = result.data;\n            }\n            if (result.errors) {\n              accumulatedData.errors = [\n                ...accumulatedData.errors || [],\n                ...result.errors || []\n              ];\n            }\n            if (result.extensions)\n              accumulatedData.extensions = {\n                ...accumulatedData.extensions,\n                ...result.extensions\n              };\n          } else {\n            accumulatedData = result;\n          }\n          if (!maxDelay) {\n            flushAccumulatedData();\n          } else if (!maxDelayTimeout) {\n            maxDelayTimeout = setTimeout(flushAccumulatedData, maxDelay);\n          }\n        },\n        error: (error) => {\n          if (maxDelayTimeout)\n            clearTimeout(maxDelayTimeout);\n          subscriber.error(error);\n        },\n        complete: () => {\n          if (maxDelayTimeout) {\n            clearTimeout(maxDelayTimeout);\n            flushAccumulatedData();\n          }\n          subscriber.complete();\n        }\n      });\n      function flushAccumulatedData() {\n        subscriber.next(accumulatedData);\n        subscriber.complete();\n        upstreamSubscription.unsubscribe();\n      }\n      return function cleanUp() {\n        clearTimeout(maxDelayTimeout);\n        upstreamSubscription.unsubscribe();\n      };\n    });\n  }\n};\nfunction getDirectiveArgumentValue(directive, argument) {\n  return directive.arguments?.find((arg) => arg.name.value === argument)?.value;\n}\nvar RemoveMultipartDirectivesLink = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_4__.ApolloLink {\n  stripDirectives = [];\n  constructor(config) {\n    super();\n    if (config.stripDefer !== false)\n      this.stripDirectives.push(\"defer\");\n  }\n  request(operation, forward) {\n    if (!forward) {\n      throw new Error(\"This is not a terminal link!\");\n    }\n    const { query } = operation;\n    let modifiedQuery = query;\n    modifiedQuery = (0,_apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.removeDirectivesFromDocument)(\n      this.stripDirectives.map((directive) => ({\n        test(node) {\n          let shouldStrip = node.kind === \"Directive\" && node.name.value === directive;\n          const label = getDirectiveArgumentValue(node, \"label\");\n          if (label?.kind === \"StringValue\" && label.value.startsWith(\"SsrDontStrip\")) {\n            shouldStrip = false;\n          }\n          return shouldStrip;\n        },\n        remove: true\n      })).concat({\n        test(node) {\n          if (node.kind !== \"Directive\")\n            return false;\n          const label = getDirectiveArgumentValue(node, \"label\");\n          return label?.kind === \"StringValue\" && label.value.startsWith(\"SsrStrip\");\n        },\n        remove: true\n      }),\n      modifiedQuery\n    );\n    if (modifiedQuery === null) {\n      return _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.Observable.of({});\n    }\n    operation.query = modifiedQuery;\n    return forward(operation);\n  }\n};\nvar SSRMultipartLink = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_4__.ApolloLink {\n  constructor(config = {}) {\n    const combined = _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_4__.ApolloLink.from([\n      new RemoveMultipartDirectivesLink({\n        stripDefer: config.stripDefer\n      }),\n      new AccumulateMultipartResponsesLink({\n        cutoffDelay: config.cutoffDelay || 0\n      })\n    ]);\n    super(combined.request);\n  }\n};\n\n// src/bundleInfo.ts\nvar bundle = {\n  pkg: \"@apollo/client-react-streaming\"\n};\nvar sourceSymbol = Symbol.for(\"apollo.source_package\");\n\n// src/DataTransportAbstraction/WrappedInMemoryCache.tsx\nvar InMemoryCache = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_9__.InMemoryCache {\n  /**\n   * Information about the current package and it's export names, for use in error messages.\n   *\n   * @internal\n   */\n  static info = bundle;\n  [sourceSymbol];\n  constructor(config) {\n    super(config);\n    const info = this.constructor.info;\n    this[sourceSymbol] = `${info.pkg}:InMemoryCache`;\n  }\n};\n\n// src/DataTransportAbstraction/backpressuredCallback.ts\nfunction createBackpressuredCallback() {\n  const queue = [];\n  let push = queue.push.bind(queue);\n  return {\n    push: (value) => push(value),\n    register: (callback) => {\n      if (callback) {\n        push = callback;\n        while (queue.length) {\n          callback(queue.shift());\n        }\n      } else {\n        push = queue.push.bind(queue);\n      }\n    }\n  };\n}\nvar DataTransportContext = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nvar CLEAN = {};\nfunction useTransportValue(value) {\n  const dataTransport = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(DataTransportContext);\n  if (!dataTransport)\n    throw new Error(\n      \"useTransportValue must be used within a streaming-specific ApolloProvider\"\n    );\n  const valueRef = dataTransport.useStaticValueRef(value);\n  const whichResult = (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(\n    () => () => {\n    },\n    () => 0 /* client */,\n    () => valueRef.current === CLEAN ? 0 /* client */ : (0,_wry_equality__WEBPACK_IMPORTED_MODULE_2__.equal)(value, valueRef.current) ? 0 /* client */ : 1 /* server */\n  );\n  if (whichResult === 0 /* client */) {\n    valueRef.current = CLEAN;\n  }\n  return whichResult === 1 /* server */ ? valueRef.current : value;\n}\nvar teeToReadableStreamKey = Symbol.for(\n  \"apollo.tee.readableStreamController\"\n);\nvar readFromReadableStreamKey = Symbol.for(\"apollo.read.readableStream\");\nfunction teeToReadableStream(onLinkHit, context) {\n  return Object.assign(context, {\n    [teeToReadableStreamKey]: onLinkHit\n  });\n}\nfunction readFromReadableStream(readableStream, context) {\n  return Object.assign(context, {\n    [readFromReadableStreamKey]: readableStream\n  });\n}\nvar TeeToReadableStreamLink = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_4__.ApolloLink {\n  constructor() {\n    super((operation, forward) => {\n      const context = operation.getContext();\n      const onLinkHit = context[teeToReadableStreamKey];\n      if (onLinkHit) {\n        const controller = onLinkHit();\n        const tryClose = () => {\n          try {\n            controller.close();\n          } catch {\n          }\n        };\n        return new _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.Observable((observer) => {\n          const subscription = forward(operation).subscribe({\n            next(result) {\n              controller.enqueue({ type: \"next\", value: result });\n              observer.next(result);\n            },\n            error(error) {\n              controller.enqueue({ type: \"error\" });\n              tryClose();\n              observer.error(error);\n            },\n            complete() {\n              controller.enqueue({ type: \"completed\" });\n              tryClose();\n              observer.complete();\n            }\n          });\n          return () => {\n            tryClose();\n            subscription.unsubscribe();\n          };\n        });\n      }\n      return forward(operation);\n    });\n  }\n};\nvar ReadFromReadableStreamLink = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_4__.ApolloLink {\n  constructor() {\n    super((operation, forward) => {\n      const context = operation.getContext();\n      const eventSteam = context[readFromReadableStreamKey];\n      if (eventSteam) {\n        return new _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.Observable((observer) => {\n          let aborted = false;\n          const reader = (() => {\n            try {\n              return eventSteam.getReader();\n            } catch {\n            }\n          })();\n          if (!reader) {\n            const subscription = forward(operation).subscribe(observer);\n            return () => subscription.unsubscribe();\n          }\n          consume(reader);\n          let onAbort = () => {\n            aborted = true;\n            reader.cancel();\n          };\n          return () => onAbort();\n          async function consume(reader2) {\n            let event = undefined;\n            while (!aborted && !event?.done) {\n              event = await reader2.read();\n              if (aborted)\n                break;\n              if (event.value) {\n                switch (event.value.type) {\n                  case \"next\":\n                    observer.next(event.value.value);\n                    break;\n                  case \"completed\":\n                    observer.complete();\n                    break;\n                  case \"error\":\n                    {\n                      observer.error(\n                        new Error(\n                          \"Error from event stream. Redacted for security concerns.\"\n                        )\n                      );\n                    }\n                    break;\n                }\n              }\n            }\n          }\n        });\n      }\n      return forward(operation);\n    });\n  }\n};\nfunction serializeOptions(options) {\n  return {\n    ...options,\n    query: printMinified(options.query)\n  };\n}\nfunction deserializeOptions(options) {\n  return {\n    ...options,\n    // `gql` memoizes results, but based on the input string.\n    // We parse-stringify-parse here to ensure that our minified query\n    // has the best chance of being the referential same query as the one used in\n    // client-side code.\n    query: (0,_apollo_client_index_js__WEBPACK_IMPORTED_MODULE_10__.gql)((0,_apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_11__.print)((0,_apollo_client_index_js__WEBPACK_IMPORTED_MODULE_10__.gql)(options.query)))\n  };\n}\nfunction printMinified(query) {\n  return (0,graphql__WEBPACK_IMPORTED_MODULE_12__.stripIgnoredCharacters)((0,_apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_11__.print)(query));\n}\nfunction getInjectableEventStream() {\n  let controller;\n  const stream = new ReadableStream({\n    start(c) {\n      controller = c;\n    }\n  });\n  return [controller, stream];\n}\nfunction createTransportedQueryPreloader(client) {\n  return (...[query, options]) => {\n    options = { ...options };\n    delete options.returnPartialData;\n    delete options.nextFetchPolicy;\n    delete options.pollInterval;\n    const [controller, stream] = getInjectableEventStream();\n    client.query({\n      query,\n      ...options,\n      // ensure that this query makes it to the network\n      fetchPolicy: \"no-cache\",\n      context: skipDataTransport(\n        teeToReadableStream(() => controller, {\n          ...options?.context,\n          // we want to do this even if the query is already running for another reason\n          queryDeduplication: false\n        })\n      )\n    }).catch(() => {\n    });\n    return createTransportedQueryRef(\n      query,\n      options,\n      crypto.randomUUID(),\n      stream\n    );\n  };\n}\nfunction createTransportedQueryRef(query, options, queryKey, stream) {\n  return {\n    $__apollo_queryRef: {\n      options: sanitizeForTransport(serializeOptions({ query, ...options })),\n      queryKey,\n      stream: stream.pipeThrough(new _apollo_client_react_streaming_stream_utils__WEBPACK_IMPORTED_MODULE_3__.JSONEncodeStream())\n    }\n  };\n}\nvar hydrationCache = /* @__PURE__ */ new WeakMap();\nfunction reviveTransportedQueryRef(queryRef, client) {\n  const {\n    $__apollo_queryRef: { options, stream, queryKey }\n  } = queryRef;\n  if (!hydrationCache.has(queryRef)) {\n    const hydratedOptions = deserializeOptions(options);\n    const cacheKey = [\n      hydratedOptions.query,\n      (0,_apollo_client_cache_index_js__WEBPACK_IMPORTED_MODULE_13__.canonicalStringify)(hydratedOptions.variables),\n      queryKey\n    ];\n    hydrationCache.set(queryRef, { cacheKey });\n    const internalQueryRef = (0,_apollo_client_react_internal_index_js__WEBPACK_IMPORTED_MODULE_14__.getSuspenseCache)(client).getQueryRef(\n      cacheKey,\n      () => client.watchQuery({\n        ...hydratedOptions,\n        fetchPolicy: \"network-only\",\n        context: skipDataTransport(\n          readFromReadableStream(stream.pipeThrough(new _apollo_client_react_streaming_stream_utils__WEBPACK_IMPORTED_MODULE_3__.JSONDecodeStream()), {\n            ...hydratedOptions.context,\n            queryDeduplication: true\n          })\n        )\n      })\n    );\n    Object.assign(queryRef, (0,_apollo_client_react_internal_index_js__WEBPACK_IMPORTED_MODULE_15__.wrapQueryRef)(internalQueryRef));\n  }\n}\nfunction isTransportedQueryRef(queryRef) {\n  return !!(queryRef && queryRef.$__apollo_queryRef);\n}\nfunction useWrapTransportedQueryRef(queryRef) {\n  const client = (0,_apollo_client_react_index_js__WEBPACK_IMPORTED_MODULE_16__.useApolloClient)();\n  let cacheKey;\n  let isTransported;\n  if (isTransported = isTransportedQueryRef(queryRef)) {\n    reviveTransportedQueryRef(queryRef, client);\n    cacheKey = hydrationCache.get(queryRef)?.cacheKey;\n  }\n  const unwrapped = (0,_apollo_client_react_internal_index_js__WEBPACK_IMPORTED_MODULE_15__.unwrapQueryRef)(queryRef);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!isTransported)\n      return;\n    if (cacheKey) {\n      if (unwrapped.disposed) {\n        (0,_apollo_client_react_internal_index_js__WEBPACK_IMPORTED_MODULE_14__.getSuspenseCache)(client).add(cacheKey, unwrapped);\n      }\n    }\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (isTransported) {\n      return unwrapped.softRetain();\n    }\n  }, [isTransported, unwrapped]);\n  return queryRef;\n}\nfunction sanitizeForTransport(value) {\n  return JSON.parse(JSON.stringify(value));\n}\nvar hookWrappers = {\n  useFragment(orig_useFragment) {\n    return wrap(orig_useFragment, [\"data\", \"complete\", \"missing\"]);\n  },\n  useQuery(orig_useQuery) {\n    return wrap(\n      (query, options) => orig_useQuery(query, { ...options, fetchPolicy: \"cache-only\" }) ,\n      [\"data\", \"loading\", \"networkStatus\", \"called\"]\n    );\n  },\n  useSuspenseQuery(orig_useSuspenseQuery) {\n    return wrap(orig_useSuspenseQuery, [\"data\", \"networkStatus\"]);\n  },\n  useReadQuery(orig_useReadQuery) {\n    return wrap(\n      (queryRef) => {\n        return orig_useReadQuery(useWrapTransportedQueryRef(queryRef));\n      },\n      [\"data\", \"networkStatus\"]\n    );\n  },\n  useQueryRefHandlers(orig_useQueryRefHandlers) {\n    return wrap((queryRef) => {\n      return orig_useQueryRefHandlers(useWrapTransportedQueryRef(queryRef));\n    }, []);\n  },\n  useSuspenseFragment(orig_useSuspenseFragment) {\n    return wrap(orig_useSuspenseFragment, [\"data\"]);\n  }\n};\nfunction wrap(useFn, transportKeys) {\n  return (...args) => {\n    const result = useFn(...args);\n    if (transportKeys.length == 0) {\n      return result;\n    }\n    const forTransport = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n      const transport = {};\n      for (const key of transportKeys) {\n        transport[key] = result[key];\n      }\n      return transport;\n    }, [result]);\n    const transported = useTransportValue(forTransport);\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n      () => ({ ...result, ...transported }),\n      [result, transported]\n    );\n  };\n}\n\n// src/assertInstance.ts\nfunction assertInstance(value, info, name) {\n  if (value[sourceSymbol] !== `${info.pkg}:${name}`) {\n    throw new Error(\n      `When using \\`${name}\\` in streaming SSR, you must use the \\`${name}\\` export provided by \\`\"${info.pkg}\"\\`.`\n    );\n  }\n}\n\n// src/DataTransportAbstraction/WrappedApolloClient.tsx\nfunction getQueryManager(client) {\n  return client[\"queryManager\"];\n}\nvar wrappers = Symbol.for(\"apollo.hook.wrappers\");\nvar ApolloClientBase = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_17__.ApolloClient {\n  /**\n   * Information about the current package and it's export names, for use in error messages.\n   *\n   * @internal\n   */\n  static info = bundle;\n  [sourceSymbol];\n  constructor(options) {\n    const warnings = [];\n    if (\"ssrMode\" in options) {\n      delete options.ssrMode;\n      warnings.push(\n        \"The `ssrMode` option is not supported in %s. Please remove it from your %s constructor options.\"\n      );\n    }\n    if (\"ssrForceFetchDelay\" in options) {\n      delete options.ssrForceFetchDelay;\n      warnings.push(\n        \"The `ssrForceFetchDelay` option is not supported in %s. Please remove it from your %s constructor options.\"\n      );\n    }\n    super(\n      {\n        connectToDevTools: false,\n        ...options\n      } \n    );\n    const info = this.constructor.info;\n    this[sourceSymbol] = `${info.pkg}:ApolloClient`;\n    for (const warning of warnings) {\n      console.warn(warning, info.pkg, \"ApolloClient\");\n    }\n    assertInstance(\n      this.cache,\n      info,\n      \"InMemoryCache\"\n    );\n    this.setLink(this.link);\n  }\n  setLink(newLink) {\n    super.setLink.call(\n      this,\n      _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_4__.ApolloLink.from([\n        new ReadFromReadableStreamLink(),\n        new TeeToReadableStreamLink(),\n        newLink\n      ])\n    );\n  }\n};\nvar ApolloClientClientBaseImpl = class extends ApolloClientBase {\n  constructor(options) {\n    super(options);\n    this.onQueryStarted = this.onQueryStarted.bind(this);\n    getQueryManager(this)[wrappers] = hookWrappers;\n  }\n  simulatedStreamingQueries = /* @__PURE__ */ new Map();\n  onQueryStarted({ options, id }) {\n    const hydratedOptions = deserializeOptions(options);\n    const [controller, stream] = getInjectableEventStream();\n    const queryManager = getQueryManager(this);\n    const queryId = queryManager.generateQueryId();\n    queryManager.fetchQuery(queryId, {\n      ...hydratedOptions,\n      query: queryManager.transform(hydratedOptions.query),\n      fetchPolicy: \"network-only\",\n      context: skipDataTransport(\n        readFromReadableStream(stream, {\n          ...hydratedOptions.context,\n          queryDeduplication: true\n        })\n      )\n    }).finally(() => queryManager.removeQuery(queryId));\n    this.simulatedStreamingQueries.set(id, {\n      controller,\n      options: hydratedOptions\n    });\n  }\n  onQueryProgress = (event) => {\n    const queryInfo = this.simulatedStreamingQueries.get(event.id);\n    if (!queryInfo)\n      return;\n    if (event.type === \"error\" || event.type === \"next\" && event.value.errors) {\n      this.simulatedStreamingQueries.delete(event.id);\n      {\n        ts_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant.debug(\n          \"Query failed upstream, will fail it during SSR and rerun it in the browser:\",\n          queryInfo.options\n        );\n        queryInfo.controller.error(new Error(\"Query failed upstream.\"));\n      }\n    } else if (event.type === \"completed\") {\n      this.simulatedStreamingQueries.delete(event.id);\n      queryInfo.controller.enqueue(event);\n    } else if (event.type === \"next\") {\n      queryInfo.controller.enqueue(event);\n    }\n  };\n  /**\n   * Can be called when the stream closed unexpectedly while there might still be unresolved\n   * simulated server-side queries going on.\n   * Those queries will be cancelled and then re-run in the browser.\n   */\n  rerunSimulatedQueries = () => {\n    for (const [id, queryInfo] of this.simulatedStreamingQueries) {\n      this.simulatedStreamingQueries.delete(id);\n      ts_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant.debug(\n        \"streaming connection closed before server query could be fully transported, rerunning:\",\n        queryInfo.options\n      );\n      this.rerunSimulatedQuery(queryInfo);\n    }\n  };\n  rerunSimulatedQuery = (queryInfo) => {\n    const queryManager = getQueryManager(this);\n    const queryId = queryManager.generateQueryId();\n    queryManager.fetchQuery(queryId, {\n      ...queryInfo.options,\n      fetchPolicy: \"no-cache\",\n      query: queryManager.transform(queryInfo.options.query),\n      context: skipDataTransport(\n        teeToReadableStream(() => queryInfo.controller, {\n          ...queryInfo.options.context,\n          queryDeduplication: false\n        })\n      )\n    }).finally(() => queryManager.removeQuery(queryId));\n  };\n};\nvar skipDataTransportKey = Symbol.for(\"apollo.dataTransport.skip\");\nfunction skipDataTransport(context) {\n  return Object.assign(context, {\n    [skipDataTransportKey]: true\n  });\n}\nvar ApolloClientSSRImpl = class extends ApolloClientClientBaseImpl {\n  watchQueryQueue = createBackpressuredCallback();\n  pushEventStream(options) {\n    const id = crypto.randomUUID();\n    const [controller, eventStream] = getInjectableEventStream();\n    const streamObservable = new _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.Observable((subscriber) => {\n      function consume(event) {\n        const value = event.value;\n        if (value) {\n          subscriber.next({ ...value, id });\n        }\n        if (event.done) {\n          subscriber.complete();\n        } else {\n          reader.read().then(consume);\n        }\n      }\n      const reader = eventStream.getReader();\n      reader.read().then(consume);\n    });\n    this.watchQueryQueue.push({\n      event: {\n        type: \"started\",\n        options: serializeOptions(options),\n        id\n      },\n      observable: streamObservable\n    });\n    return controller;\n  }\n  watchQuery(options) {\n    if (!options.context?.[skipDataTransportKey]) {\n      return super.watchQuery({\n        ...options,\n        context: teeToReadableStream(() => this.pushEventStream(options), {\n          ...options?.context\n        })\n      });\n    }\n    return super.watchQuery(options);\n  }\n};\nvar ApolloClientImplementation = ApolloClientSSRImpl ;\nvar ApolloClient = class extends ApolloClientImplementation {\n};\n\n// src/DataTransportAbstraction/symbols.ts\nvar ApolloClientSingleton = /* @__PURE__ */ Symbol.for(\n  \"ApolloClientSingleton\"\n);\n\n// src/DataTransportAbstraction/testHelpers.ts\nfunction resetApolloSingletons() {\n  delete window[ApolloClientSingleton];\n}\nfunction WrapApolloProvider(TransportProvider) {\n  const WrappedApolloProvider3 = ({\n    makeClient,\n    children,\n    ...extraProps\n  }) => {\n    const clientRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(undefined);\n    if (!clientRef.current) {\n      {\n        clientRef.current = makeClient();\n      }\n      assertInstance(\n        clientRef.current,\n        WrappedApolloProvider3.info,\n        \"ApolloClient\"\n      );\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.createElement(_apollo_client_react_index_js__WEBPACK_IMPORTED_MODULE_18__.ApolloProvider, { client: clientRef.current }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\n      TransportProvider,\n      {\n        onQueryEvent: (event) => event.type === \"started\" ? clientRef.current.onQueryStarted(event) : clientRef.current.onQueryProgress(event),\n        rerunSimulatedQueries: clientRef.current.rerunSimulatedQueries,\n        registerDispatchRequestStarted: clientRef.current.watchQueryQueue?.register,\n        ...extraProps\n      },\n      children\n    ));\n  };\n  WrappedApolloProvider3.info = bundle;\n  return WrappedApolloProvider3;\n}\nconst built_for_ssr = true;\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.ssr.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/index.ssr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/manual-transport.ssr.js":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/manual-transport.ssr.js ***!
  \******************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildManualDataTransport: () => (/* binding */ buildManualDataTransport),\n/* harmony export */   built_for_ssr: () => (/* binding */ built_for_ssr),\n/* harmony export */   registerLateInitializingQueue: () => (/* binding */ registerLateInitializingQueue),\n/* harmony export */   resetManualSSRApolloSingletons: () => (/* binding */ resetManualSSRApolloSingletons)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _apollo_client_react_streaming__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @apollo/client-react-streaming */ \"(ssr)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/index.ssr.js\");\n/* harmony import */ var ts_invariant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ts-invariant */ \"(ssr)/./node_modules/.pnpm/ts-invariant@0.10.3/node_modules/ts-invariant/lib/invariant.js\");\n\n\n\n\n// src/ManualDataTransport/ManualDataTransport.tsx\n\n// src/ManualDataTransport/ApolloRehydrateSymbols.tsx\nvar ApolloSSRDataTransport = /* @__PURE__ */ Symbol.for(\n  \"ApolloSSRDataTransport\"\n);\nvar ApolloHookRehydrationCache = /* @__PURE__ */ Symbol.for(\n  \"apollo.hookRehydrationCache\"\n);\n\n// src/ManualDataTransport/lateInitializingQueue.ts\nfunction registerLateInitializingQueue(key, callback) {\n  const previousData = window[key] || [];\n  if (Array.isArray(previousData)) {\n    window[key] = {\n      push: (...data) => {\n        for (const value of data) {\n          callback(value);\n        }\n      }\n    };\n    window[key].push(...previousData);\n  }\n}\n\n// src/ManualDataTransport/htmlescape.ts\nvar ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction htmlEscapeJsonString(str) {\n  return str.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\n\n// src/ManualDataTransport/dataTransport.ts\nfunction transportDataToJS(data, stringify2) {\n  const key = Symbol.keyFor(ApolloSSRDataTransport);\n  return `(window[Symbol.for(\"${key}\")] ??= []).push(${htmlEscapeJsonString(\n    stringify2(data)\n  )})`;\n}\nfunction buildApolloRehydrationContext({\n  insertHtml,\n  stringify: stringify2,\n  extraScriptProps\n}) {\n  function ensureInserted() {\n    if (!rehydrationContext.currentlyInjected) {\n      rehydrationContext.currentlyInjected = true;\n      insertHtml(() => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(rehydrationContext.RehydrateOnClient, null));\n    }\n  }\n  const rehydrationContext = {\n    currentlyInjected: false,\n    transportValueData: getTransportObject(ensureInserted),\n    transportedValues: {},\n    incomingEvents: getTransportArray(ensureInserted),\n    RehydrateOnClient() {\n      rehydrationContext.currentlyInjected = false;\n      if (!Object.keys(rehydrationContext.transportValueData).length && !Object.keys(rehydrationContext.incomingEvents).length)\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null);\n      ts_invariant__WEBPACK_IMPORTED_MODULE_2__.invariant.debug(\n        \"transporting data\",\n        rehydrationContext.transportValueData\n      );\n      ts_invariant__WEBPACK_IMPORTED_MODULE_2__.invariant.debug(\"transporting events\", rehydrationContext.incomingEvents);\n      const __html = transportDataToJS(\n        {\n          rehydrate: Object.fromEntries(\n            Object.entries(rehydrationContext.transportValueData).filter(\n              ([key, value]) => rehydrationContext.transportedValues[key] !== value\n            )\n          ),\n          events: rehydrationContext.incomingEvents\n        },\n        stringify2\n      );\n      Object.assign(\n        rehydrationContext.transportedValues,\n        rehydrationContext.transportValueData\n      );\n      rehydrationContext.transportValueData = getTransportObject(ensureInserted);\n      rehydrationContext.incomingEvents = getTransportArray(ensureInserted);\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        \"script\",\n        {\n          ...extraScriptProps,\n          dangerouslySetInnerHTML: {\n            __html\n          }\n        }\n      );\n    }\n  };\n  return rehydrationContext;\n}\nfunction getTransportObject(ensureInserted) {\n  return new Proxy(\n    {},\n    {\n      set(...args) {\n        ensureInserted();\n        return Reflect.set(...args);\n      }\n    }\n  );\n}\nfunction getTransportArray(ensureInserted) {\n  return new Proxy([], {\n    get(...args) {\n      if (args[1] === \"push\") {\n        return (...values) => {\n          ensureInserted();\n          return args[0].push(...values);\n        };\n      }\n      return Reflect.get(...args);\n    }\n  });\n}\n\n// src/ManualDataTransport/serialization.ts\nfunction stringify(value) {\n  let undefinedPlaceholder = \"$apollo.undefined$\";\n  const stringified = JSON.stringify(value);\n  while (stringified.includes(JSON.stringify(undefinedPlaceholder))) {\n    undefinedPlaceholder = \"$\" + undefinedPlaceholder;\n  }\n  return JSON.stringify(\n    value,\n    (_, v) => v === undefined ? undefinedPlaceholder : v\n  ).replaceAll(JSON.stringify(undefinedPlaceholder), \"undefined\");\n}\n\n// src/ManualDataTransport/ManualDataTransport.tsx\nvar buildManualDataTransportSSRImpl = ({\n  useInsertHtml,\n  stringifyForStream = stringify\n}) => function ManualDataTransportSSRImpl({\n  extraScriptProps,\n  children,\n  registerDispatchRequestStarted\n}) {\n  const insertHtml = useInsertHtml();\n  const rehydrationContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(undefined);\n  if (!rehydrationContext.current) {\n    rehydrationContext.current = buildApolloRehydrationContext({\n      insertHtml,\n      extraScriptProps,\n      stringify: stringifyForStream\n    });\n  }\n  registerDispatchRequestStarted(({ event, observable }) => {\n    rehydrationContext.current.incomingEvents.push(event);\n    observable.subscribe({\n      next(event2) {\n        rehydrationContext.current.incomingEvents.push(event2);\n      }\n    });\n  });\n  const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => ({\n      useStaticValueRef: function useStaticValueRef(value) {\n        const id = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n        rehydrationContext.current.transportValueData[id] = value;\n        return { current: value };\n      }\n    }),\n    []\n  );\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_apollo_client_react_streaming__WEBPACK_IMPORTED_MODULE_1__.DataTransportContext.Provider, { value: contextValue }, children);\n};\nvar buildManualDataTransport = buildManualDataTransportSSRImpl ;\nfunction resetManualSSRApolloSingletons() {\n  (0,_apollo_client_react_streaming__WEBPACK_IMPORTED_MODULE_1__.resetApolloSingletons)();\n  delete window[ApolloHookRehydrationCache];\n  delete window[ApolloSSRDataTransport];\n}\nconst built_for_ssr = true;\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=manual-transport.ssr.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/manual-transport.ssr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/stream-utils.ssr.js":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/stream-utils.ssr.js ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JSONDecodeStream: () => (/* binding */ JSONDecodeStream),\n/* harmony export */   JSONEncodeStream: () => (/* binding */ JSONEncodeStream),\n/* harmony export */   built_for_ssr: () => (/* binding */ built_for_ssr),\n/* harmony export */   createInjectionTransformStream: () => (/* binding */ createInjectionTransformStream),\n/* harmony export */   pipeReaderToResponse: () => (/* binding */ pipeReaderToResponse)\n/* harmony export */ });\n/* harmony import */ var react_dom_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom/server */ \"(ssr)/./node_modules/.pnpm/next@14.2.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react-dom/server.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\n\n// src/stream-utils/JSONTransformStreams.tsx\nvar JSONEncodeStream = class extends TransformStream {\n  constructor() {\n    super({\n      transform(chunk, controller) {\n        controller.enqueue(JSON.stringify(chunk));\n      }\n    });\n  }\n};\nvar JSONDecodeStream = class extends TransformStream {\n  constructor() {\n    super({\n      transform(chunk, controller) {\n        if (typeof chunk !== \"string\") {\n          chunk = new TextDecoder().decode(chunk);\n        }\n        controller.enqueue(JSON.parse(chunk));\n      }\n    });\n  }\n};\nfunction createInjectionTransformStream() {\n  let queuedInjections = [];\n  async function renderInjectedHtml() {\n    const injections = [...queuedInjections];\n    queuedInjections = [];\n    return (0,react_dom_server__WEBPACK_IMPORTED_MODULE_0__.renderToString)(\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, injections.map((callback, i) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, { key: i }, callback())))\n    );\n  }\n  let headInserted = false;\n  let currentlyStreaming = false;\n  let tailOfLastChunk = \"\";\n  const textDecoder = new TextDecoder();\n  const textEncoder = new TextEncoder();\n  const HEAD_END = \"</head>\";\n  const KEEP_BYTES = HEAD_END.length;\n  const transformStream = new TransformStream({\n    async transform(chunk, controller) {\n      if (currentlyStreaming) {\n        controller.enqueue(chunk);\n        return;\n      }\n      if (!headInserted) {\n        const content = tailOfLastChunk + textDecoder.decode(chunk, { stream: true });\n        const index = content.indexOf(HEAD_END);\n        if (index !== -1) {\n          const insertedHeadContent = content.slice(0, index) + await renderInjectedHtml() + content.slice(index);\n          controller.enqueue(textEncoder.encode(insertedHeadContent));\n          currentlyStreaming = true;\n          setImmediate(() => {\n            currentlyStreaming = false;\n          });\n          headInserted = true;\n        } else {\n          tailOfLastChunk = content.slice(-KEEP_BYTES);\n          controller.enqueue(textEncoder.encode(content.slice(0, -KEEP_BYTES)));\n        }\n      } else {\n        controller.enqueue(textEncoder.encode(await renderInjectedHtml()));\n        controller.enqueue(chunk);\n        currentlyStreaming = true;\n        setImmediate(() => {\n          currentlyStreaming = false;\n        });\n      }\n    }\n  });\n  return {\n    transformStream,\n    injectIntoStream: (callback) => queuedInjections.push(callback)\n  };\n}\n\n// src/stream-utils/pipeReaderToResponse.ts\nasync function pipeReaderToResponse(reader, res) {\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        res.end();\n        return;\n      } else {\n        res.write(value);\n      }\n    }\n  } catch (e) {\n    res.destroy(e);\n  }\n}\nconst built_for_ssr = true;\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=stream-utils.ssr.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFwb2xsbytjbGllbnQtcmVhY3Qtc3RyZWFtaW5nQDAuMTIuMl9AYXBvbGxvK2NsaWVudEAzLjEzLjhfQHR5cGVzK3JlYWN0QDE5LjEuNl9ncmFwaHFsLXdzQDYuXzJtZGphM2l5dDU2d2U3dHJubG91ajNtbzVhL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC1yZWFjdC1zdHJlYW1pbmcvZGlzdC9zdHJlYW0tdXRpbHMuc3NyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBa0Q7QUFDbkI7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdFQUFjO0FBQ3pCLHNCQUFzQixnREFBbUIsQ0FBQywyQ0FBYyx3REFBd0QsZ0RBQW1CLENBQUMsMkNBQWMsSUFBSSxRQUFRO0FBQzlKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLGNBQWM7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxjQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRW1IO0FBQ25IO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91aS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AYXBvbGxvK2NsaWVudC1yZWFjdC1zdHJlYW1pbmdAMC4xMi4yX0BhcG9sbG8rY2xpZW50QDMuMTMuOF9AdHlwZXMrcmVhY3RAMTkuMS42X2dyYXBocWwtd3NANi5fMm1kamEzaXl0NTZ3ZTd0cm5sb3VqM21vNWEvbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50LXJlYWN0LXN0cmVhbWluZy9kaXN0L3N0cmVhbS11dGlscy5zc3IuanM/M2ZmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXJUb1N0cmluZyB9IGZyb20gJ3JlYWN0LWRvbS9zZXJ2ZXInO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG4vLyBzcmMvc3RyZWFtLXV0aWxzL0pTT05UcmFuc2Zvcm1TdHJlYW1zLnRzeFxudmFyIEpTT05FbmNvZGVTdHJlYW0gPSBjbGFzcyBleHRlbmRzIFRyYW5zZm9ybVN0cmVhbSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKHtcbiAgICAgIHRyYW5zZm9ybShjaHVuaywgY29udHJvbGxlcikge1xuICAgICAgICBjb250cm9sbGVyLmVucXVldWUoSlNPTi5zdHJpbmdpZnkoY2h1bmspKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufTtcbnZhciBKU09ORGVjb2RlU3RyZWFtID0gY2xhc3MgZXh0ZW5kcyBUcmFuc2Zvcm1TdHJlYW0ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcih7XG4gICAgICB0cmFuc2Zvcm0oY2h1bmssIGNvbnRyb2xsZXIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjaHVuayAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgIGNodW5rID0gbmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKGNodW5rKTtcbiAgICAgICAgfVxuICAgICAgICBjb250cm9sbGVyLmVucXVldWUoSlNPTi5wYXJzZShjaHVuaykpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59O1xuZnVuY3Rpb24gY3JlYXRlSW5qZWN0aW9uVHJhbnNmb3JtU3RyZWFtKCkge1xuICBsZXQgcXVldWVkSW5qZWN0aW9ucyA9IFtdO1xuICBhc3luYyBmdW5jdGlvbiByZW5kZXJJbmplY3RlZEh0bWwoKSB7XG4gICAgY29uc3QgaW5qZWN0aW9ucyA9IFsuLi5xdWV1ZWRJbmplY3Rpb25zXTtcbiAgICBxdWV1ZWRJbmplY3Rpb25zID0gW107XG4gICAgcmV0dXJuIHJlbmRlclRvU3RyaW5nKFxuICAgICAgLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIGluamVjdGlvbnMubWFwKChjYWxsYmFjaywgaSkgPT4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIHsga2V5OiBpIH0sIGNhbGxiYWNrKCkpKSlcbiAgICApO1xuICB9XG4gIGxldCBoZWFkSW5zZXJ0ZWQgPSBmYWxzZTtcbiAgbGV0IGN1cnJlbnRseVN0cmVhbWluZyA9IGZhbHNlO1xuICBsZXQgdGFpbE9mTGFzdENodW5rID0gXCJcIjtcbiAgY29uc3QgdGV4dERlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbiAgY29uc3QgdGV4dEVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbiAgY29uc3QgSEVBRF9FTkQgPSBcIjwvaGVhZD5cIjtcbiAgY29uc3QgS0VFUF9CWVRFUyA9IEhFQURfRU5ELmxlbmd0aDtcbiAgY29uc3QgdHJhbnNmb3JtU3RyZWFtID0gbmV3IFRyYW5zZm9ybVN0cmVhbSh7XG4gICAgYXN5bmMgdHJhbnNmb3JtKGNodW5rLCBjb250cm9sbGVyKSB7XG4gICAgICBpZiAoY3VycmVudGx5U3RyZWFtaW5nKSB7XG4gICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShjaHVuayk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmICghaGVhZEluc2VydGVkKSB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnQgPSB0YWlsT2ZMYXN0Q2h1bmsgKyB0ZXh0RGVjb2Rlci5kZWNvZGUoY2h1bmssIHsgc3RyZWFtOiB0cnVlIH0pO1xuICAgICAgICBjb25zdCBpbmRleCA9IGNvbnRlbnQuaW5kZXhPZihIRUFEX0VORCk7XG4gICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICBjb25zdCBpbnNlcnRlZEhlYWRDb250ZW50ID0gY29udGVudC5zbGljZSgwLCBpbmRleCkgKyBhd2FpdCByZW5kZXJJbmplY3RlZEh0bWwoKSArIGNvbnRlbnQuc2xpY2UoaW5kZXgpO1xuICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZSh0ZXh0RW5jb2Rlci5lbmNvZGUoaW5zZXJ0ZWRIZWFkQ29udGVudCkpO1xuICAgICAgICAgIGN1cnJlbnRseVN0cmVhbWluZyA9IHRydWU7XG4gICAgICAgICAgc2V0SW1tZWRpYXRlKCgpID0+IHtcbiAgICAgICAgICAgIGN1cnJlbnRseVN0cmVhbWluZyA9IGZhbHNlO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGhlYWRJbnNlcnRlZCA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGFpbE9mTGFzdENodW5rID0gY29udGVudC5zbGljZSgtS0VFUF9CWVRFUyk7XG4gICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKHRleHRFbmNvZGVyLmVuY29kZShjb250ZW50LnNsaWNlKDAsIC1LRUVQX0JZVEVTKSkpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb250cm9sbGVyLmVucXVldWUodGV4dEVuY29kZXIuZW5jb2RlKGF3YWl0IHJlbmRlckluamVjdGVkSHRtbCgpKSk7XG4gICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShjaHVuayk7XG4gICAgICAgIGN1cnJlbnRseVN0cmVhbWluZyA9IHRydWU7XG4gICAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICAgICAgY3VycmVudGx5U3RyZWFtaW5nID0gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIHJldHVybiB7XG4gICAgdHJhbnNmb3JtU3RyZWFtLFxuICAgIGluamVjdEludG9TdHJlYW06IChjYWxsYmFjaykgPT4gcXVldWVkSW5qZWN0aW9ucy5wdXNoKGNhbGxiYWNrKVxuICB9O1xufVxuXG4vLyBzcmMvc3RyZWFtLXV0aWxzL3BpcGVSZWFkZXJUb1Jlc3BvbnNlLnRzXG5hc3luYyBmdW5jdGlvbiBwaXBlUmVhZGVyVG9SZXNwb25zZShyZWFkZXIsIHJlcykge1xuICB0cnkge1xuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICBjb25zdCB7IGRvbmUsIHZhbHVlIH0gPSBhd2FpdCByZWFkZXIucmVhZCgpO1xuICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgcmVzLmVuZCgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXMud3JpdGUodmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgIHJlcy5kZXN0cm95KGUpO1xuICB9XG59XG5jb25zdCBidWlsdF9mb3Jfc3NyID0gdHJ1ZTtcblxuZXhwb3J0IHsgSlNPTkRlY29kZVN0cmVhbSwgSlNPTkVuY29kZVN0cmVhbSwgYnVpbHRfZm9yX3NzciwgY3JlYXRlSW5qZWN0aW9uVHJhbnNmb3JtU3RyZWFtLCBwaXBlUmVhZGVyVG9SZXNwb25zZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3V0LmpzLm1hcFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyZWFtLXV0aWxzLnNzci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/stream-utils.ssr.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/index.cc.js":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/index.cc.js ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SimulatePreloadedQuery: () => (/* binding */ e0),
/* harmony export */   built_for_browser: () => (/* binding */ e1)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(action-browser)/./node_modules/.pnpm/next@14.2.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");


const e0 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/nguyenphuchung/Documents/personal_project/meeting_area/fe/node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/index.cc.js#SimulatePreloadedQuery`);

const e1 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/nguyenphuchung/Documents/personal_project/meeting_area/fe/node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/index.cc.js#built_for_browser`);


/***/ }),

/***/ "(action-browser)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/index.rsc.js":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/index.rsc.js ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApolloClient: () => (/* binding */ ApolloClient),\n/* harmony export */   DebounceMultipartResponsesLink: () => (/* binding */ AccumulateMultipartResponsesLink),\n/* harmony export */   InMemoryCache: () => (/* binding */ InMemoryCache),\n/* harmony export */   ReadFromReadableStreamLink: () => (/* binding */ ReadFromReadableStreamLink),\n/* harmony export */   RemoveMultipartDirectivesLink: () => (/* binding */ RemoveMultipartDirectivesLink),\n/* harmony export */   SSRMultipartLink: () => (/* binding */ SSRMultipartLink),\n/* harmony export */   TeeToReadableStreamLink: () => (/* binding */ TeeToReadableStreamLink),\n/* harmony export */   built_for_rsc: () => (/* binding */ built_for_rsc),\n/* harmony export */   createTransportedQueryPreloader: () => (/* binding */ createTransportedQueryPreloader),\n/* harmony export */   isTransportedQueryRef: () => (/* binding */ isTransportedQueryRef),\n/* harmony export */   readFromReadableStream: () => (/* binding */ readFromReadableStream),\n/* harmony export */   registerApolloClient: () => (/* binding */ registerApolloClient),\n/* harmony export */   reviveTransportedQueryRef: () => (/* binding */ reviveTransportedQueryRef),\n/* harmony export */   teeToReadableStream: () => (/* binding */ teeToReadableStream)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(action-browser)/./node_modules/.pnpm/next@14.2.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\");\n/* harmony import */ var _index_cc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.cc.js */ \"(action-browser)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/index.cc.js\");\n/* harmony import */ var _apollo_client_react_internal_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @apollo/client/react/internal/index.js */ \"(action-browser)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/react/internal/cache/getSuspenseCache.js\");\n/* harmony import */ var _apollo_client_react_internal_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @apollo/client/react/internal/index.js */ \"(action-browser)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/react/internal/cache/QueryReference.js\");\n/* harmony import */ var _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @apollo/client/index.js */ \"(action-browser)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/link/core/ApolloLink.js\");\n/* harmony import */ var _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @apollo/client/utilities/index.js */ \"(action-browser)/./node_modules/.pnpm/zen-observable-ts@1.2.5/node_modules/zen-observable-ts/module.js\");\n/* harmony import */ var _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @apollo/client/index.js */ \"(action-browser)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/cache/inmemory/inMemoryCache.js\");\n/* harmony import */ var _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @apollo/client/index.js */ \"(action-browser)/./node_modules/.pnpm/graphql-tag@2.12.6_graphql@16.11.0/node_modules/graphql-tag/lib/index.js\");\n/* harmony import */ var _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @apollo/client/index.js */ \"(action-browser)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/core/ApolloClient.js\");\n/* harmony import */ var _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @apollo/client/utilities/index.js */ \"(action-browser)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/utilities/graphql/print.js\");\n/* harmony import */ var _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @apollo/client/utilities/index.js */ \"(action-browser)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/utilities/graphql/directives.js\");\n/* harmony import */ var _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @apollo/client/utilities/index.js */ \"(action-browser)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/utilities/common/incrementalResult.js\");\n/* harmony import */ var _apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @apollo/client/utilities/index.js */ \"(action-browser)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/utilities/graphql/transform.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ \"(action-browser)/./node_modules/.pnpm/graphql@16.11.0/node_modules/graphql/utilities/stripIgnoredCharacters.mjs\");\n/* harmony import */ var _apollo_client_cache_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @apollo/client/cache/index.js */ \"(action-browser)/./node_modules/.pnpm/@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6.0.5_graphql@16.11.0_ws@8.17.1__graphql_ccfucrhblnzc5rmq5qewf67s6u/node_modules/@apollo/client/utilities/common/canonicalStringify.js\");\n/* harmony import */ var _apollo_client_react_streaming_stream_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @apollo/client-react-streaming/stream-utils */ \"(action-browser)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/stream-utils.js\");\n\n\n\n\n\n\n\n\n\n// src/registerApolloClient.tsx\nvar teeToReadableStreamKey = Symbol.for(\n  \"apollo.tee.readableStreamController\"\n);\nvar readFromReadableStreamKey = Symbol.for(\"apollo.read.readableStream\");\nfunction teeToReadableStream(onLinkHit, context) {\n  return Object.assign(context, {\n    [teeToReadableStreamKey]: onLinkHit\n  });\n}\nfunction readFromReadableStream(readableStream, context) {\n  return Object.assign(context, {\n    [readFromReadableStreamKey]: readableStream\n  });\n}\nvar TeeToReadableStreamLink = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_3__.ApolloLink {\n  constructor() {\n    super((operation, forward) => {\n      const context = operation.getContext();\n      const onLinkHit = context[teeToReadableStreamKey];\n      if (onLinkHit) {\n        const controller = onLinkHit();\n        const tryClose = () => {\n          try {\n            controller.close();\n          } catch {\n          }\n        };\n        return new _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_4__.Observable((observer) => {\n          const subscription = forward(operation).subscribe({\n            next(result) {\n              controller.enqueue({ type: \"next\", value: result });\n              observer.next(result);\n            },\n            error(error) {\n              controller.enqueue({ type: \"error\" });\n              tryClose();\n              observer.error(error);\n            },\n            complete() {\n              controller.enqueue({ type: \"completed\" });\n              tryClose();\n              observer.complete();\n            }\n          });\n          return () => {\n            tryClose();\n            subscription.unsubscribe();\n          };\n        });\n      }\n      return forward(operation);\n    });\n  }\n};\nvar ReadFromReadableStreamLink = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_3__.ApolloLink {\n  constructor() {\n    super((operation, forward) => {\n      const context = operation.getContext();\n      const eventSteam = context[readFromReadableStreamKey];\n      if (eventSteam) {\n        return new _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_4__.Observable((observer) => {\n          let aborted = false;\n          const reader = (() => {\n            try {\n              return eventSteam.getReader();\n            } catch {\n            }\n          })();\n          if (!reader) {\n            const subscription = forward(operation).subscribe(observer);\n            return () => subscription.unsubscribe();\n          }\n          consume(reader);\n          let onAbort = () => {\n            aborted = true;\n            reader.cancel();\n          };\n          return () => onAbort();\n          async function consume(reader2) {\n            let event = undefined;\n            while (!aborted && !event?.done) {\n              event = await reader2.read();\n              if (aborted)\n                break;\n              if (event.value) {\n                switch (event.value.type) {\n                  case \"next\":\n                    observer.next(event.value.value);\n                    break;\n                  case \"completed\":\n                    observer.complete();\n                    break;\n                  case \"error\":\n                    {\n                      onAbort();\n                      const subscription = forward(operation).subscribe(observer);\n                      onAbort = () => subscription.unsubscribe();\n                    }\n                    break;\n                }\n              }\n            }\n          }\n        });\n      }\n      return forward(operation);\n    });\n  }\n};\n\n// src/bundleInfo.ts\nvar bundle = {\n  pkg: \"@apollo/client-react-streaming\"\n};\nvar sourceSymbol = Symbol.for(\"apollo.source_package\");\n\n// src/DataTransportAbstraction/WrappedInMemoryCache.tsx\nvar InMemoryCache = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_5__.InMemoryCache {\n  /**\n   * Information about the current package and it's export names, for use in error messages.\n   *\n   * @internal\n   */\n  static info = bundle;\n  [sourceSymbol];\n  constructor(config) {\n    super(config);\n    const info = this.constructor.info;\n    this[sourceSymbol] = `${info.pkg}:InMemoryCache`;\n  }\n};\nfunction serializeOptions(options) {\n  return {\n    ...options,\n    query: printMinified(options.query)\n  };\n}\nfunction deserializeOptions(options) {\n  return {\n    ...options,\n    // `gql` memoizes results, but based on the input string.\n    // We parse-stringify-parse here to ensure that our minified query\n    // has the best chance of being the referential same query as the one used in\n    // client-side code.\n    query: (0,_apollo_client_index_js__WEBPACK_IMPORTED_MODULE_6__.gql)((0,_apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.print)((0,_apollo_client_index_js__WEBPACK_IMPORTED_MODULE_6__.gql)(options.query)))\n  };\n}\nfunction printMinified(query) {\n  return (0,graphql__WEBPACK_IMPORTED_MODULE_8__.stripIgnoredCharacters)((0,_apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.print)(query));\n}\n\n// src/assertInstance.ts\nfunction assertInstance(value, info, name) {\n  if (value[sourceSymbol] !== `${info.pkg}:${name}`) {\n    throw new Error(\n      `When using \\`${name}\\` in streaming SSR, you must use the \\`${name}\\` export provided by \\`\"${info.pkg}\"\\`.`\n    );\n  }\n}\nvar ApolloClientBase = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_9__.ApolloClient {\n  /**\n   * Information about the current package and it's export names, for use in error messages.\n   *\n   * @internal\n   */\n  static info = bundle;\n  [sourceSymbol];\n  constructor(options) {\n    const warnings = [];\n    if (\"ssrMode\" in options) {\n      delete options.ssrMode;\n      warnings.push(\n        \"The `ssrMode` option is not supported in %s. Please remove it from your %s constructor options.\"\n      );\n    }\n    if (\"ssrForceFetchDelay\" in options) {\n      delete options.ssrForceFetchDelay;\n      warnings.push(\n        \"The `ssrForceFetchDelay` option is not supported in %s. Please remove it from your %s constructor options.\"\n      );\n    }\n    super(\n      {\n        connectToDevTools: false,\n        ...options\n      } \n    );\n    const info = this.constructor.info;\n    this[sourceSymbol] = `${info.pkg}:ApolloClient`;\n    for (const warning of warnings) {\n      console.warn(warning, info.pkg, \"ApolloClient\");\n    }\n    assertInstance(\n      this.cache,\n      info,\n      \"InMemoryCache\"\n    );\n    this.setLink(this.link);\n  }\n  setLink(newLink) {\n    super.setLink.call(\n      this,\n      _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_3__.ApolloLink.from([\n        new ReadFromReadableStreamLink(),\n        new TeeToReadableStreamLink(),\n        newLink\n      ])\n    );\n  }\n};\nvar skipDataTransportKey = Symbol.for(\"apollo.dataTransport.skip\");\nfunction skipDataTransport(context) {\n  return Object.assign(context, {\n    [skipDataTransportKey]: true\n  });\n}\nvar ApolloClientRSCImpl = class extends ApolloClientBase {\n};\nvar ApolloClientImplementation = ApolloClientRSCImpl;\nvar ApolloClient = class extends ApolloClientImplementation {\n};\nfunction getInjectableEventStream() {\n  let controller;\n  const stream = new ReadableStream({\n    start(c) {\n      controller = c;\n    }\n  });\n  return [controller, stream];\n}\nfunction createTransportedQueryPreloader(client) {\n  return (...[query, options]) => {\n    options = { ...options };\n    delete options.returnPartialData;\n    delete options.nextFetchPolicy;\n    delete options.pollInterval;\n    const [controller, stream] = getInjectableEventStream();\n    client.query({\n      query,\n      ...options,\n      // ensure that this query makes it to the network\n      fetchPolicy: \"no-cache\",\n      context: skipDataTransport(\n        teeToReadableStream(() => controller, {\n          ...options?.context,\n          // we want to do this even if the query is already running for another reason\n          queryDeduplication: false\n        })\n      )\n    }).catch(() => {\n    });\n    return createTransportedQueryRef(\n      query,\n      options,\n      crypto.randomUUID(),\n      stream\n    );\n  };\n}\nfunction createTransportedQueryRef(query, options, queryKey, stream) {\n  return {\n    $__apollo_queryRef: {\n      options: sanitizeForTransport(serializeOptions({ query, ...options })),\n      queryKey,\n      stream: stream.pipeThrough(new _apollo_client_react_streaming_stream_utils__WEBPACK_IMPORTED_MODULE_2__.JSONEncodeStream())\n    }\n  };\n}\nvar hydrationCache = /* @__PURE__ */ new WeakMap();\nfunction reviveTransportedQueryRef(queryRef, client) {\n  const {\n    $__apollo_queryRef: { options, stream, queryKey }\n  } = queryRef;\n  if (!hydrationCache.has(queryRef)) {\n    const hydratedOptions = deserializeOptions(options);\n    const cacheKey = [\n      hydratedOptions.query,\n      (0,_apollo_client_cache_index_js__WEBPACK_IMPORTED_MODULE_10__.canonicalStringify)(hydratedOptions.variables),\n      queryKey\n    ];\n    hydrationCache.set(queryRef, { cacheKey });\n    const internalQueryRef = (0,_apollo_client_react_internal_index_js__WEBPACK_IMPORTED_MODULE_11__.getSuspenseCache)(client).getQueryRef(\n      cacheKey,\n      () => client.watchQuery({\n        ...hydratedOptions,\n        fetchPolicy: \"network-only\",\n        context: skipDataTransport(\n          readFromReadableStream(stream.pipeThrough(new _apollo_client_react_streaming_stream_utils__WEBPACK_IMPORTED_MODULE_2__.JSONDecodeStream()), {\n            ...hydratedOptions.context,\n            queryDeduplication: true\n          })\n        )\n      })\n    );\n    Object.assign(queryRef, (0,_apollo_client_react_internal_index_js__WEBPACK_IMPORTED_MODULE_12__.wrapQueryRef)(internalQueryRef));\n  }\n}\nfunction isTransportedQueryRef(queryRef) {\n  return !!(queryRef && queryRef.$__apollo_queryRef);\n}\nfunction sanitizeForTransport(value) {\n  return JSON.parse(JSON.stringify(value));\n}\n\n// src/PreloadQuery.tsx\nasync function PreloadQuery({\n  getClient,\n  children,\n  ...options\n}) {\n  const preloader = createTransportedQueryPreloader(await getClient());\n  const { query, ...transportedOptions } = options;\n  const queryRef = preloader(query, transportedOptions);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_cc_js__WEBPACK_IMPORTED_MODULE_1__.SimulatePreloadedQuery, { queryRef }, typeof children === \"function\" ? children(queryRef) : children);\n}\n\n// src/registerApolloClient.tsx\nvar seenWrappers = WeakSet ? /* @__PURE__ */ new WeakSet() : undefined;\nvar seenClients = WeakSet ? /* @__PURE__ */ new WeakSet() : undefined;\nvar checkForStableCache = (0,react__WEBPACK_IMPORTED_MODULE_0__.cache)(() => ({}));\nfunction registerApolloClient(makeClient) {\n  const getClient = makeGetClient(makeClient);\n  const getPreloadClient = makeGetClient(makeClient);\n  const PreloadQuery2 = makePreloadQuery(getPreloadClient);\n  return {\n    getClient,\n    query: async (...args) => {\n      if (checkForStableCache() !== checkForStableCache()) {\n        console.warn(\n          `\nThe \\`query\\` shortcut returned from \\`registerApolloClient\\` \nshould not be used in Server Action or Middleware environments.\n\nCalling it multiple times in those environments would \ncreate multiple independent \\`ApolloClient\\` instances.\n\nPlease create a single \\`ApolloClient\\` instance by calling \n\\`getClient()\\` at the beginning of your Server Action or Middleware \nfunction and then call \\`client.query\\` multiple times instead.\n          `.trim()\n        );\n      }\n      return (await getClient()).query(...args);\n    },\n    PreloadQuery: PreloadQuery2\n  };\n}\nfunction makeGetClient(makeClient) {\n  function makeWrappedClient() {\n    return { client: makeClient() };\n  }\n  const cachedMakeWrappedClient = (0,react__WEBPACK_IMPORTED_MODULE_0__.cache)(makeWrappedClient);\n  function getClient() {\n    if (arguments.length) {\n      throw new Error(\n        `\nYou cannot pass arguments into \\`getClient\\`.\nPassing arguments to \\`getClient\\` returns a different instance\nof Apollo Client each time it is called with different arguments, potentially \nresulting in duplicate requests and a non-functional cache. \n      `.trim()\n      );\n    }\n    const wrapper = cachedMakeWrappedClient();\n    if (seenWrappers && seenClients) {\n      if (!seenWrappers.has(wrapper)) {\n        if (seenClients.has(wrapper.client)) {\n          console.warn(\n            `\nMultiple calls to \\`getClient\\` for different requests returned the same client instance.\nThis means that private user data could accidentally be shared between requests.\nThis happens, for example, if you create a global \\`ApolloClient\\` instance and your \\`makeClient\\`\nimplementation just looks like \\`() => client\\`.\nAlways call \\`new ApolloClient\\` **inside** your \\`makeClient\\` function and\nreturn a new instance every time \\`makeClient\\` is called.\n`.trim()\n          );\n        }\n        seenWrappers.add(wrapper);\n        seenClients.add(wrapper.client);\n      }\n    }\n    return wrapper.client;\n  }\n  return getClient;\n}\nfunction makePreloadQuery(getClient) {\n  return function PreloadQuery2(props) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PreloadQuery, { getClient, ...props });\n  };\n}\nvar AccumulateMultipartResponsesLink = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_3__.ApolloLink {\n  maxDelay;\n  constructor(config) {\n    super();\n    this.maxDelay = config.cutoffDelay;\n  }\n  request(operation, forward) {\n    if (!forward) {\n      throw new Error(\"This is not a terminal link!\");\n    }\n    const operationContainsMultipartDirectives = (0,_apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_13__.hasDirectives)(\n      [\"defer\"],\n      operation.query\n    );\n    const upstream = forward(operation);\n    if (!operationContainsMultipartDirectives)\n      return upstream;\n    const maxDelay = this.maxDelay;\n    let accumulatedData, maxDelayTimeout;\n    return new _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_4__.Observable((subscriber) => {\n      const upstreamSubscription = upstream.subscribe({\n        next: (result) => {\n          if (accumulatedData) {\n            if (accumulatedData.data && \"incremental\" in result) {\n              accumulatedData.data = (0,_apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_14__.mergeIncrementalData)(\n                accumulatedData.data,\n                result\n              );\n            } else if (result.data) {\n              accumulatedData.data = result.data;\n            }\n            if (result.errors) {\n              accumulatedData.errors = [\n                ...accumulatedData.errors || [],\n                ...result.errors || []\n              ];\n            }\n            if (result.extensions)\n              accumulatedData.extensions = {\n                ...accumulatedData.extensions,\n                ...result.extensions\n              };\n          } else {\n            accumulatedData = result;\n          }\n          if (!maxDelay) {\n            flushAccumulatedData();\n          } else if (!maxDelayTimeout) {\n            maxDelayTimeout = setTimeout(flushAccumulatedData, maxDelay);\n          }\n        },\n        error: (error) => {\n          if (maxDelayTimeout)\n            clearTimeout(maxDelayTimeout);\n          subscriber.error(error);\n        },\n        complete: () => {\n          if (maxDelayTimeout) {\n            clearTimeout(maxDelayTimeout);\n            flushAccumulatedData();\n          }\n          subscriber.complete();\n        }\n      });\n      function flushAccumulatedData() {\n        subscriber.next(accumulatedData);\n        subscriber.complete();\n        upstreamSubscription.unsubscribe();\n      }\n      return function cleanUp() {\n        clearTimeout(maxDelayTimeout);\n        upstreamSubscription.unsubscribe();\n      };\n    });\n  }\n};\nfunction getDirectiveArgumentValue(directive, argument) {\n  return directive.arguments?.find((arg) => arg.name.value === argument)?.value;\n}\nvar RemoveMultipartDirectivesLink = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_3__.ApolloLink {\n  stripDirectives = [];\n  constructor(config) {\n    super();\n    if (config.stripDefer !== false)\n      this.stripDirectives.push(\"defer\");\n  }\n  request(operation, forward) {\n    if (!forward) {\n      throw new Error(\"This is not a terminal link!\");\n    }\n    const { query } = operation;\n    let modifiedQuery = query;\n    modifiedQuery = (0,_apollo_client_utilities_index_js__WEBPACK_IMPORTED_MODULE_15__.removeDirectivesFromDocument)(\n      this.stripDirectives.map((directive) => ({\n        test(node) {\n          let shouldStrip = node.kind === \"Directive\" && node.name.value === directive;\n          const label = getDirectiveArgumentValue(node, \"label\");\n          if (label?.kind === \"StringValue\" && label.value.startsWith(\"SsrDontStrip\")) {\n            shouldStrip = false;\n          }\n          return shouldStrip;\n        },\n        remove: true\n      })).concat({\n        test(node) {\n          if (node.kind !== \"Directive\")\n            return false;\n          const label = getDirectiveArgumentValue(node, \"label\");\n          return label?.kind === \"StringValue\" && label.value.startsWith(\"SsrStrip\");\n        },\n        remove: true\n      }),\n      modifiedQuery\n    );\n    if (modifiedQuery === null) {\n      return _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_4__.Observable.of({});\n    }\n    operation.query = modifiedQuery;\n    return forward(operation);\n  }\n};\nvar SSRMultipartLink = class extends _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_3__.ApolloLink {\n  constructor(config = {}) {\n    const combined = _apollo_client_index_js__WEBPACK_IMPORTED_MODULE_3__.ApolloLink.from([\n      new RemoveMultipartDirectivesLink({\n        stripDefer: config.stripDefer\n      }),\n      new AccumulateMultipartResponsesLink({\n        cutoffDelay: config.cutoffDelay || 0\n      })\n    ]);\n    super(combined.request);\n  }\n};\nconst built_for_rsc = true;\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.rsc.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AYXBvbGxvK2NsaWVudC1yZWFjdC1zdHJlYW1pbmdAMC4xMi4yX0BhcG9sbG8rY2xpZW50QDMuMTMuOF9AdHlwZXMrcmVhY3RAMTkuMS42X2dyYXBocWwtd3NANi5fMm1kamEzaXl0NTZ3ZTd0cm5sb3VqM21vNWEvbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50LXJlYWN0LXN0cmVhbWluZy9kaXN0L2luZGV4LnJzYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0M7QUFDaUI7QUFDaUM7QUFDZ0Q7QUFDaUI7QUFDeEc7QUFDa0I7QUFDOEI7O0FBRWpHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSw0Q0FBNEMsK0RBQVU7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxtQkFBbUIsK0RBQVU7QUFDN0I7QUFDQTtBQUNBLG1DQUFtQyw2QkFBNkI7QUFDaEU7QUFDQSxhQUFhO0FBQ2I7QUFDQSxtQ0FBbUMsZUFBZTtBQUNsRDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsbUNBQW1DLG1CQUFtQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsK0NBQStDLCtEQUFVO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsK0RBQVU7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtDQUFrQyxrRUFBZTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixTQUFTO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNERBQUcsQ0FBQyx3RUFBSyxDQUFDLDREQUFHO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLFNBQVMsK0RBQXNCLENBQUMsd0VBQUs7QUFDckM7O0FBRUE7QUFDQTtBQUNBLGlDQUFpQyxTQUFTLEdBQUcsS0FBSztBQUNsRDtBQUNBLHNCQUFzQixLQUFLLDBDQUEwQyxLQUFLLDJCQUEyQixTQUFTO0FBQzlHO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxpRUFBYztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixTQUFTO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSwrREFBVTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELG1CQUFtQjtBQUMxRTtBQUNBLHFDQUFxQyx5RkFBZ0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sa0ZBQWtCO0FBQ3hCO0FBQ0E7QUFDQSxtQ0FBbUMsVUFBVTtBQUM3Qyw2QkFBNkIseUZBQWdCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QseUZBQWdCO0FBQ3hFO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQSw0QkFBNEIscUZBQVk7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsVUFBVSwrQkFBK0I7QUFDekM7QUFDQSx5QkFBeUIsZ0RBQW9CLENBQUMsZ0VBQXNCLElBQUksVUFBVTtBQUNsRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsNENBQUssVUFBVTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esa0NBQWtDLDRDQUFLO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixnREFBb0IsaUJBQWlCLHFCQUFxQjtBQUNyRjtBQUNBO0FBQ0EscURBQXFELCtEQUFVO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxpRkFBYTtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwrREFBWTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyx3RkFBb0I7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsK0RBQVU7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQSxvQkFBb0IsZ0dBQTRCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxhQUFhLCtEQUFZLE1BQU07QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQywrREFBVTtBQUMvQyx5QkFBeUI7QUFDekIscUJBQXFCLCtEQUFVO0FBQy9CO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzWDtBQUN0WDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdWkvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFwb2xsbytjbGllbnQtcmVhY3Qtc3RyZWFtaW5nQDAuMTIuMl9AYXBvbGxvK2NsaWVudEAzLjEzLjhfQHR5cGVzK3JlYWN0QDE5LjEuNl9ncmFwaHFsLXdzQDYuXzJtZGphM2l5dDU2d2U3dHJubG91ajNtbzVhL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC1yZWFjdC1zdHJlYW1pbmcvZGlzdC9pbmRleC5yc2MuanM/MWIwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QyLCB7IGNhY2hlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU2ltdWxhdGVQcmVsb2FkZWRRdWVyeSB9IGZyb20gJy4vaW5kZXguY2MuanMnO1xuaW1wb3J0IHsgZ2V0U3VzcGVuc2VDYWNoZSwgd3JhcFF1ZXJ5UmVmIH0gZnJvbSAnQGFwb2xsby9jbGllbnQvcmVhY3QvaW50ZXJuYWwvaW5kZXguanMnO1xuaW1wb3J0IHsgQXBvbGxvTGluaywgT2JzZXJ2YWJsZSwgSW5NZW1vcnlDYWNoZSBhcyBJbk1lbW9yeUNhY2hlJDEsIGdxbCwgQXBvbGxvQ2xpZW50IGFzIEFwb2xsb0NsaWVudCQxIH0gZnJvbSAnQGFwb2xsby9jbGllbnQvaW5kZXguanMnO1xuaW1wb3J0IHsgaGFzRGlyZWN0aXZlcywgT2JzZXJ2YWJsZSBhcyBPYnNlcnZhYmxlJDEsIHJlbW92ZURpcmVjdGl2ZXNGcm9tRG9jdW1lbnQsIHByaW50LCBtZXJnZUluY3JlbWVudGFsRGF0YSB9IGZyb20gJ0BhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9pbmRleC5qcyc7XG5pbXBvcnQgeyBzdHJpcElnbm9yZWRDaGFyYWN0ZXJzIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBjYW5vbmljYWxTdHJpbmdpZnkgfSBmcm9tICdAYXBvbGxvL2NsaWVudC9jYWNoZS9pbmRleC5qcyc7XG5pbXBvcnQgeyBKU09ORW5jb2RlU3RyZWFtLCBKU09ORGVjb2RlU3RyZWFtIH0gZnJvbSAnQGFwb2xsby9jbGllbnQtcmVhY3Qtc3RyZWFtaW5nL3N0cmVhbS11dGlscyc7XG5cbi8vIHNyYy9yZWdpc3RlckFwb2xsb0NsaWVudC50c3hcbnZhciB0ZWVUb1JlYWRhYmxlU3RyZWFtS2V5ID0gU3ltYm9sLmZvcihcbiAgXCJhcG9sbG8udGVlLnJlYWRhYmxlU3RyZWFtQ29udHJvbGxlclwiXG4pO1xudmFyIHJlYWRGcm9tUmVhZGFibGVTdHJlYW1LZXkgPSBTeW1ib2wuZm9yKFwiYXBvbGxvLnJlYWQucmVhZGFibGVTdHJlYW1cIik7XG5mdW5jdGlvbiB0ZWVUb1JlYWRhYmxlU3RyZWFtKG9uTGlua0hpdCwgY29udGV4dCkge1xuICByZXR1cm4gT2JqZWN0LmFzc2lnbihjb250ZXh0LCB7XG4gICAgW3RlZVRvUmVhZGFibGVTdHJlYW1LZXldOiBvbkxpbmtIaXRcbiAgfSk7XG59XG5mdW5jdGlvbiByZWFkRnJvbVJlYWRhYmxlU3RyZWFtKHJlYWRhYmxlU3RyZWFtLCBjb250ZXh0KSB7XG4gIHJldHVybiBPYmplY3QuYXNzaWduKGNvbnRleHQsIHtcbiAgICBbcmVhZEZyb21SZWFkYWJsZVN0cmVhbUtleV06IHJlYWRhYmxlU3RyZWFtXG4gIH0pO1xufVxudmFyIFRlZVRvUmVhZGFibGVTdHJlYW1MaW5rID0gY2xhc3MgZXh0ZW5kcyBBcG9sbG9MaW5rIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKG9wZXJhdGlvbiwgZm9yd2FyZCkgPT4ge1xuICAgICAgY29uc3QgY29udGV4dCA9IG9wZXJhdGlvbi5nZXRDb250ZXh0KCk7XG4gICAgICBjb25zdCBvbkxpbmtIaXQgPSBjb250ZXh0W3RlZVRvUmVhZGFibGVTdHJlYW1LZXldO1xuICAgICAgaWYgKG9uTGlua0hpdCkge1xuICAgICAgICBjb25zdCBjb250cm9sbGVyID0gb25MaW5rSGl0KCk7XG4gICAgICAgIGNvbnN0IHRyeUNsb3NlID0gKCkgPT4ge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb250cm9sbGVyLmNsb3NlKCk7XG4gICAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbmV3IE9ic2VydmFibGUoKG9ic2VydmVyKSA9PiB7XG4gICAgICAgICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gZm9yd2FyZChvcGVyYXRpb24pLnN1YnNjcmliZSh7XG4gICAgICAgICAgICBuZXh0KHJlc3VsdCkge1xuICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoeyB0eXBlOiBcIm5leHRcIiwgdmFsdWU6IHJlc3VsdCB9KTtcbiAgICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dChyZXN1bHQpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yKGVycm9yKSB7XG4gICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZSh7IHR5cGU6IFwiZXJyb3JcIiB9KTtcbiAgICAgICAgICAgICAgdHJ5Q2xvc2UoKTtcbiAgICAgICAgICAgICAgb2JzZXJ2ZXIuZXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbXBsZXRlKCkge1xuICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoeyB0eXBlOiBcImNvbXBsZXRlZFwiIH0pO1xuICAgICAgICAgICAgICB0cnlDbG9zZSgpO1xuICAgICAgICAgICAgICBvYnNlcnZlci5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICB0cnlDbG9zZSgpO1xuICAgICAgICAgICAgc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZm9yd2FyZChvcGVyYXRpb24pO1xuICAgIH0pO1xuICB9XG59O1xudmFyIFJlYWRGcm9tUmVhZGFibGVTdHJlYW1MaW5rID0gY2xhc3MgZXh0ZW5kcyBBcG9sbG9MaW5rIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKG9wZXJhdGlvbiwgZm9yd2FyZCkgPT4ge1xuICAgICAgY29uc3QgY29udGV4dCA9IG9wZXJhdGlvbi5nZXRDb250ZXh0KCk7XG4gICAgICBjb25zdCBldmVudFN0ZWFtID0gY29udGV4dFtyZWFkRnJvbVJlYWRhYmxlU3RyZWFtS2V5XTtcbiAgICAgIGlmIChldmVudFN0ZWFtKSB7XG4gICAgICAgIHJldHVybiBuZXcgT2JzZXJ2YWJsZSgob2JzZXJ2ZXIpID0+IHtcbiAgICAgICAgICBsZXQgYWJvcnRlZCA9IGZhbHNlO1xuICAgICAgICAgIGNvbnN0IHJlYWRlciA9ICgoKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICByZXR1cm4gZXZlbnRTdGVhbS5nZXRSZWFkZXIoKTtcbiAgICAgICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pKCk7XG4gICAgICAgICAgaWYgKCFyZWFkZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IHN1YnNjcmlwdGlvbiA9IGZvcndhcmQob3BlcmF0aW9uKS5zdWJzY3JpYmUob2JzZXJ2ZXIpO1xuICAgICAgICAgICAgcmV0dXJuICgpID0+IHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdW1lKHJlYWRlcik7XG4gICAgICAgICAgbGV0IG9uQWJvcnQgPSAoKSA9PiB7XG4gICAgICAgICAgICBhYm9ydGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHJlYWRlci5jYW5jZWwoKTtcbiAgICAgICAgICB9O1xuICAgICAgICAgIHJldHVybiAoKSA9PiBvbkFib3J0KCk7XG4gICAgICAgICAgYXN5bmMgZnVuY3Rpb24gY29uc3VtZShyZWFkZXIyKSB7XG4gICAgICAgICAgICBsZXQgZXZlbnQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB3aGlsZSAoIWFib3J0ZWQgJiYgIWV2ZW50Py5kb25lKSB7XG4gICAgICAgICAgICAgIGV2ZW50ID0gYXdhaXQgcmVhZGVyMi5yZWFkKCk7XG4gICAgICAgICAgICAgIGlmIChhYm9ydGVkKVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICBpZiAoZXZlbnQudmFsdWUpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGV2ZW50LnZhbHVlLnR5cGUpIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgXCJuZXh0XCI6XG4gICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLm5leHQoZXZlbnQudmFsdWUudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgIGNhc2UgXCJjb21wbGV0ZWRcIjpcbiAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXIuY29tcGxldGUoKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICBjYXNlIFwiZXJyb3JcIjpcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgIG9uQWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBmb3J3YXJkKG9wZXJhdGlvbikuc3Vic2NyaWJlKG9ic2VydmVyKTtcbiAgICAgICAgICAgICAgICAgICAgICBvbkFib3J0ID0gKCkgPT4gc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmb3J3YXJkKG9wZXJhdGlvbik7XG4gICAgfSk7XG4gIH1cbn07XG5cbi8vIHNyYy9idW5kbGVJbmZvLnRzXG52YXIgYnVuZGxlID0ge1xuICBwa2c6IFwiQGFwb2xsby9jbGllbnQtcmVhY3Qtc3RyZWFtaW5nXCJcbn07XG52YXIgc291cmNlU3ltYm9sID0gU3ltYm9sLmZvcihcImFwb2xsby5zb3VyY2VfcGFja2FnZVwiKTtcblxuLy8gc3JjL0RhdGFUcmFuc3BvcnRBYnN0cmFjdGlvbi9XcmFwcGVkSW5NZW1vcnlDYWNoZS50c3hcbnZhciBJbk1lbW9yeUNhY2hlID0gY2xhc3MgZXh0ZW5kcyBJbk1lbW9yeUNhY2hlJDEge1xuICAvKipcbiAgICogSW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgcGFja2FnZSBhbmQgaXQncyBleHBvcnQgbmFtZXMsIGZvciB1c2UgaW4gZXJyb3IgbWVzc2FnZXMuXG4gICAqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgc3RhdGljIGluZm8gPSBidW5kbGU7XG4gIFtzb3VyY2VTeW1ib2xdO1xuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICBzdXBlcihjb25maWcpO1xuICAgIGNvbnN0IGluZm8gPSB0aGlzLmNvbnN0cnVjdG9yLmluZm87XG4gICAgdGhpc1tzb3VyY2VTeW1ib2xdID0gYCR7aW5mby5wa2d9OkluTWVtb3J5Q2FjaGVgO1xuICB9XG59O1xuZnVuY3Rpb24gc2VyaWFsaXplT3B0aW9ucyhvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgLi4ub3B0aW9ucyxcbiAgICBxdWVyeTogcHJpbnRNaW5pZmllZChvcHRpb25zLnF1ZXJ5KVxuICB9O1xufVxuZnVuY3Rpb24gZGVzZXJpYWxpemVPcHRpb25zKG9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICAuLi5vcHRpb25zLFxuICAgIC8vIGBncWxgIG1lbW9pemVzIHJlc3VsdHMsIGJ1dCBiYXNlZCBvbiB0aGUgaW5wdXQgc3RyaW5nLlxuICAgIC8vIFdlIHBhcnNlLXN0cmluZ2lmeS1wYXJzZSBoZXJlIHRvIGVuc3VyZSB0aGF0IG91ciBtaW5pZmllZCBxdWVyeVxuICAgIC8vIGhhcyB0aGUgYmVzdCBjaGFuY2Ugb2YgYmVpbmcgdGhlIHJlZmVyZW50aWFsIHNhbWUgcXVlcnkgYXMgdGhlIG9uZSB1c2VkIGluXG4gICAgLy8gY2xpZW50LXNpZGUgY29kZS5cbiAgICBxdWVyeTogZ3FsKHByaW50KGdxbChvcHRpb25zLnF1ZXJ5KSkpXG4gIH07XG59XG5mdW5jdGlvbiBwcmludE1pbmlmaWVkKHF1ZXJ5KSB7XG4gIHJldHVybiBzdHJpcElnbm9yZWRDaGFyYWN0ZXJzKHByaW50KHF1ZXJ5KSk7XG59XG5cbi8vIHNyYy9hc3NlcnRJbnN0YW5jZS50c1xuZnVuY3Rpb24gYXNzZXJ0SW5zdGFuY2UodmFsdWUsIGluZm8sIG5hbWUpIHtcbiAgaWYgKHZhbHVlW3NvdXJjZVN5bWJvbF0gIT09IGAke2luZm8ucGtnfToke25hbWV9YCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBXaGVuIHVzaW5nIFxcYCR7bmFtZX1cXGAgaW4gc3RyZWFtaW5nIFNTUiwgeW91IG11c3QgdXNlIHRoZSBcXGAke25hbWV9XFxgIGV4cG9ydCBwcm92aWRlZCBieSBcXGBcIiR7aW5mby5wa2d9XCJcXGAuYFxuICAgICk7XG4gIH1cbn1cbnZhciBBcG9sbG9DbGllbnRCYXNlID0gY2xhc3MgZXh0ZW5kcyBBcG9sbG9DbGllbnQkMSB7XG4gIC8qKlxuICAgKiBJbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBwYWNrYWdlIGFuZCBpdCdzIGV4cG9ydCBuYW1lcywgZm9yIHVzZSBpbiBlcnJvciBtZXNzYWdlcy5cbiAgICpcbiAgICogQGludGVybmFsXG4gICAqL1xuICBzdGF0aWMgaW5mbyA9IGJ1bmRsZTtcbiAgW3NvdXJjZVN5bWJvbF07XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBjb25zdCB3YXJuaW5ncyA9IFtdO1xuICAgIGlmIChcInNzck1vZGVcIiBpbiBvcHRpb25zKSB7XG4gICAgICBkZWxldGUgb3B0aW9ucy5zc3JNb2RlO1xuICAgICAgd2FybmluZ3MucHVzaChcbiAgICAgICAgXCJUaGUgYHNzck1vZGVgIG9wdGlvbiBpcyBub3Qgc3VwcG9ydGVkIGluICVzLiBQbGVhc2UgcmVtb3ZlIGl0IGZyb20geW91ciAlcyBjb25zdHJ1Y3RvciBvcHRpb25zLlwiXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAoXCJzc3JGb3JjZUZldGNoRGVsYXlcIiBpbiBvcHRpb25zKSB7XG4gICAgICBkZWxldGUgb3B0aW9ucy5zc3JGb3JjZUZldGNoRGVsYXk7XG4gICAgICB3YXJuaW5ncy5wdXNoKFxuICAgICAgICBcIlRoZSBgc3NyRm9yY2VGZXRjaERlbGF5YCBvcHRpb24gaXMgbm90IHN1cHBvcnRlZCBpbiAlcy4gUGxlYXNlIHJlbW92ZSBpdCBmcm9tIHlvdXIgJXMgY29uc3RydWN0b3Igb3B0aW9ucy5cIlxuICAgICAgKTtcbiAgICB9XG4gICAgc3VwZXIoXG4gICAgICB7XG4gICAgICAgIGNvbm5lY3RUb0RldlRvb2xzOiBmYWxzZSxcbiAgICAgICAgLi4ub3B0aW9uc1xuICAgICAgfSBcbiAgICApO1xuICAgIGNvbnN0IGluZm8gPSB0aGlzLmNvbnN0cnVjdG9yLmluZm87XG4gICAgdGhpc1tzb3VyY2VTeW1ib2xdID0gYCR7aW5mby5wa2d9OkFwb2xsb0NsaWVudGA7XG4gICAgZm9yIChjb25zdCB3YXJuaW5nIG9mIHdhcm5pbmdzKSB7XG4gICAgICBjb25zb2xlLndhcm4od2FybmluZywgaW5mby5wa2csIFwiQXBvbGxvQ2xpZW50XCIpO1xuICAgIH1cbiAgICBhc3NlcnRJbnN0YW5jZShcbiAgICAgIHRoaXMuY2FjaGUsXG4gICAgICBpbmZvLFxuICAgICAgXCJJbk1lbW9yeUNhY2hlXCJcbiAgICApO1xuICAgIHRoaXMuc2V0TGluayh0aGlzLmxpbmspO1xuICB9XG4gIHNldExpbmsobmV3TGluaykge1xuICAgIHN1cGVyLnNldExpbmsuY2FsbChcbiAgICAgIHRoaXMsXG4gICAgICBBcG9sbG9MaW5rLmZyb20oW1xuICAgICAgICBuZXcgUmVhZEZyb21SZWFkYWJsZVN0cmVhbUxpbmsoKSxcbiAgICAgICAgbmV3IFRlZVRvUmVhZGFibGVTdHJlYW1MaW5rKCksXG4gICAgICAgIG5ld0xpbmtcbiAgICAgIF0pXG4gICAgKTtcbiAgfVxufTtcbnZhciBza2lwRGF0YVRyYW5zcG9ydEtleSA9IFN5bWJvbC5mb3IoXCJhcG9sbG8uZGF0YVRyYW5zcG9ydC5za2lwXCIpO1xuZnVuY3Rpb24gc2tpcERhdGFUcmFuc3BvcnQoY29udGV4dCkge1xuICByZXR1cm4gT2JqZWN0LmFzc2lnbihjb250ZXh0LCB7XG4gICAgW3NraXBEYXRhVHJhbnNwb3J0S2V5XTogdHJ1ZVxuICB9KTtcbn1cbnZhciBBcG9sbG9DbGllbnRSU0NJbXBsID0gY2xhc3MgZXh0ZW5kcyBBcG9sbG9DbGllbnRCYXNlIHtcbn07XG52YXIgQXBvbGxvQ2xpZW50SW1wbGVtZW50YXRpb24gPSBBcG9sbG9DbGllbnRSU0NJbXBsO1xudmFyIEFwb2xsb0NsaWVudCA9IGNsYXNzIGV4dGVuZHMgQXBvbGxvQ2xpZW50SW1wbGVtZW50YXRpb24ge1xufTtcbmZ1bmN0aW9uIGdldEluamVjdGFibGVFdmVudFN0cmVhbSgpIHtcbiAgbGV0IGNvbnRyb2xsZXI7XG4gIGNvbnN0IHN0cmVhbSA9IG5ldyBSZWFkYWJsZVN0cmVhbSh7XG4gICAgc3RhcnQoYykge1xuICAgICAgY29udHJvbGxlciA9IGM7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIFtjb250cm9sbGVyLCBzdHJlYW1dO1xufVxuZnVuY3Rpb24gY3JlYXRlVHJhbnNwb3J0ZWRRdWVyeVByZWxvYWRlcihjbGllbnQpIHtcbiAgcmV0dXJuICguLi5bcXVlcnksIG9wdGlvbnNdKSA9PiB7XG4gICAgb3B0aW9ucyA9IHsgLi4ub3B0aW9ucyB9O1xuICAgIGRlbGV0ZSBvcHRpb25zLnJldHVyblBhcnRpYWxEYXRhO1xuICAgIGRlbGV0ZSBvcHRpb25zLm5leHRGZXRjaFBvbGljeTtcbiAgICBkZWxldGUgb3B0aW9ucy5wb2xsSW50ZXJ2YWw7XG4gICAgY29uc3QgW2NvbnRyb2xsZXIsIHN0cmVhbV0gPSBnZXRJbmplY3RhYmxlRXZlbnRTdHJlYW0oKTtcbiAgICBjbGllbnQucXVlcnkoe1xuICAgICAgcXVlcnksXG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgLy8gZW5zdXJlIHRoYXQgdGhpcyBxdWVyeSBtYWtlcyBpdCB0byB0aGUgbmV0d29ya1xuICAgICAgZmV0Y2hQb2xpY3k6IFwibm8tY2FjaGVcIixcbiAgICAgIGNvbnRleHQ6IHNraXBEYXRhVHJhbnNwb3J0KFxuICAgICAgICB0ZWVUb1JlYWRhYmxlU3RyZWFtKCgpID0+IGNvbnRyb2xsZXIsIHtcbiAgICAgICAgICAuLi5vcHRpb25zPy5jb250ZXh0LFxuICAgICAgICAgIC8vIHdlIHdhbnQgdG8gZG8gdGhpcyBldmVuIGlmIHRoZSBxdWVyeSBpcyBhbHJlYWR5IHJ1bm5pbmcgZm9yIGFub3RoZXIgcmVhc29uXG4gICAgICAgICAgcXVlcnlEZWR1cGxpY2F0aW9uOiBmYWxzZVxuICAgICAgICB9KVxuICAgICAgKVxuICAgIH0pLmNhdGNoKCgpID0+IHtcbiAgICB9KTtcbiAgICByZXR1cm4gY3JlYXRlVHJhbnNwb3J0ZWRRdWVyeVJlZihcbiAgICAgIHF1ZXJ5LFxuICAgICAgb3B0aW9ucyxcbiAgICAgIGNyeXB0by5yYW5kb21VVUlEKCksXG4gICAgICBzdHJlYW1cbiAgICApO1xuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlVHJhbnNwb3J0ZWRRdWVyeVJlZihxdWVyeSwgb3B0aW9ucywgcXVlcnlLZXksIHN0cmVhbSkge1xuICByZXR1cm4ge1xuICAgICRfX2Fwb2xsb19xdWVyeVJlZjoge1xuICAgICAgb3B0aW9uczogc2FuaXRpemVGb3JUcmFuc3BvcnQoc2VyaWFsaXplT3B0aW9ucyh7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pKSxcbiAgICAgIHF1ZXJ5S2V5LFxuICAgICAgc3RyZWFtOiBzdHJlYW0ucGlwZVRocm91Z2gobmV3IEpTT05FbmNvZGVTdHJlYW0oKSlcbiAgICB9XG4gIH07XG59XG52YXIgaHlkcmF0aW9uQ2FjaGUgPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtNYXAoKTtcbmZ1bmN0aW9uIHJldml2ZVRyYW5zcG9ydGVkUXVlcnlSZWYocXVlcnlSZWYsIGNsaWVudCkge1xuICBjb25zdCB7XG4gICAgJF9fYXBvbGxvX3F1ZXJ5UmVmOiB7IG9wdGlvbnMsIHN0cmVhbSwgcXVlcnlLZXkgfVxuICB9ID0gcXVlcnlSZWY7XG4gIGlmICghaHlkcmF0aW9uQ2FjaGUuaGFzKHF1ZXJ5UmVmKSkge1xuICAgIGNvbnN0IGh5ZHJhdGVkT3B0aW9ucyA9IGRlc2VyaWFsaXplT3B0aW9ucyhvcHRpb25zKTtcbiAgICBjb25zdCBjYWNoZUtleSA9IFtcbiAgICAgIGh5ZHJhdGVkT3B0aW9ucy5xdWVyeSxcbiAgICAgIGNhbm9uaWNhbFN0cmluZ2lmeShoeWRyYXRlZE9wdGlvbnMudmFyaWFibGVzKSxcbiAgICAgIHF1ZXJ5S2V5XG4gICAgXTtcbiAgICBoeWRyYXRpb25DYWNoZS5zZXQocXVlcnlSZWYsIHsgY2FjaGVLZXkgfSk7XG4gICAgY29uc3QgaW50ZXJuYWxRdWVyeVJlZiA9IGdldFN1c3BlbnNlQ2FjaGUoY2xpZW50KS5nZXRRdWVyeVJlZihcbiAgICAgIGNhY2hlS2V5LFxuICAgICAgKCkgPT4gY2xpZW50LndhdGNoUXVlcnkoe1xuICAgICAgICAuLi5oeWRyYXRlZE9wdGlvbnMsXG4gICAgICAgIGZldGNoUG9saWN5OiBcIm5ldHdvcmstb25seVwiLFxuICAgICAgICBjb250ZXh0OiBza2lwRGF0YVRyYW5zcG9ydChcbiAgICAgICAgICByZWFkRnJvbVJlYWRhYmxlU3RyZWFtKHN0cmVhbS5waXBlVGhyb3VnaChuZXcgSlNPTkRlY29kZVN0cmVhbSgpKSwge1xuICAgICAgICAgICAgLi4uaHlkcmF0ZWRPcHRpb25zLmNvbnRleHQsXG4gICAgICAgICAgICBxdWVyeURlZHVwbGljYXRpb246IHRydWVcbiAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgICB9KVxuICAgICk7XG4gICAgT2JqZWN0LmFzc2lnbihxdWVyeVJlZiwgd3JhcFF1ZXJ5UmVmKGludGVybmFsUXVlcnlSZWYpKTtcbiAgfVxufVxuZnVuY3Rpb24gaXNUcmFuc3BvcnRlZFF1ZXJ5UmVmKHF1ZXJ5UmVmKSB7XG4gIHJldHVybiAhIShxdWVyeVJlZiAmJiBxdWVyeVJlZi4kX19hcG9sbG9fcXVlcnlSZWYpO1xufVxuZnVuY3Rpb24gc2FuaXRpemVGb3JUcmFuc3BvcnQodmFsdWUpIHtcbiAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodmFsdWUpKTtcbn1cblxuLy8gc3JjL1ByZWxvYWRRdWVyeS50c3hcbmFzeW5jIGZ1bmN0aW9uIFByZWxvYWRRdWVyeSh7XG4gIGdldENsaWVudCxcbiAgY2hpbGRyZW4sXG4gIC4uLm9wdGlvbnNcbn0pIHtcbiAgY29uc3QgcHJlbG9hZGVyID0gY3JlYXRlVHJhbnNwb3J0ZWRRdWVyeVByZWxvYWRlcihhd2FpdCBnZXRDbGllbnQoKSk7XG4gIGNvbnN0IHsgcXVlcnksIC4uLnRyYW5zcG9ydGVkT3B0aW9ucyB9ID0gb3B0aW9ucztcbiAgY29uc3QgcXVlcnlSZWYgPSBwcmVsb2FkZXIocXVlcnksIHRyYW5zcG9ydGVkT3B0aW9ucyk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QyLmNyZWF0ZUVsZW1lbnQoU2ltdWxhdGVQcmVsb2FkZWRRdWVyeSwgeyBxdWVyeVJlZiB9LCB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IGNoaWxkcmVuKHF1ZXJ5UmVmKSA6IGNoaWxkcmVuKTtcbn1cblxuLy8gc3JjL3JlZ2lzdGVyQXBvbGxvQ2xpZW50LnRzeFxudmFyIHNlZW5XcmFwcGVycyA9IFdlYWtTZXQgPyAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtTZXQoKSA6IHVuZGVmaW5lZDtcbnZhciBzZWVuQ2xpZW50cyA9IFdlYWtTZXQgPyAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtTZXQoKSA6IHVuZGVmaW5lZDtcbnZhciBjaGVja0ZvclN0YWJsZUNhY2hlID0gY2FjaGUoKCkgPT4gKHt9KSk7XG5mdW5jdGlvbiByZWdpc3RlckFwb2xsb0NsaWVudChtYWtlQ2xpZW50KSB7XG4gIGNvbnN0IGdldENsaWVudCA9IG1ha2VHZXRDbGllbnQobWFrZUNsaWVudCk7XG4gIGNvbnN0IGdldFByZWxvYWRDbGllbnQgPSBtYWtlR2V0Q2xpZW50KG1ha2VDbGllbnQpO1xuICBjb25zdCBQcmVsb2FkUXVlcnkyID0gbWFrZVByZWxvYWRRdWVyeShnZXRQcmVsb2FkQ2xpZW50KTtcbiAgcmV0dXJuIHtcbiAgICBnZXRDbGllbnQsXG4gICAgcXVlcnk6IGFzeW5jICguLi5hcmdzKSA9PiB7XG4gICAgICBpZiAoY2hlY2tGb3JTdGFibGVDYWNoZSgpICE9PSBjaGVja0ZvclN0YWJsZUNhY2hlKCkpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAgIGBcblRoZSBcXGBxdWVyeVxcYCBzaG9ydGN1dCByZXR1cm5lZCBmcm9tIFxcYHJlZ2lzdGVyQXBvbGxvQ2xpZW50XFxgIFxuc2hvdWxkIG5vdCBiZSB1c2VkIGluIFNlcnZlciBBY3Rpb24gb3IgTWlkZGxld2FyZSBlbnZpcm9ubWVudHMuXG5cbkNhbGxpbmcgaXQgbXVsdGlwbGUgdGltZXMgaW4gdGhvc2UgZW52aXJvbm1lbnRzIHdvdWxkIFxuY3JlYXRlIG11bHRpcGxlIGluZGVwZW5kZW50IFxcYEFwb2xsb0NsaWVudFxcYCBpbnN0YW5jZXMuXG5cblBsZWFzZSBjcmVhdGUgYSBzaW5nbGUgXFxgQXBvbGxvQ2xpZW50XFxgIGluc3RhbmNlIGJ5IGNhbGxpbmcgXG5cXGBnZXRDbGllbnQoKVxcYCBhdCB0aGUgYmVnaW5uaW5nIG9mIHlvdXIgU2VydmVyIEFjdGlvbiBvciBNaWRkbGV3YXJlIFxuZnVuY3Rpb24gYW5kIHRoZW4gY2FsbCBcXGBjbGllbnQucXVlcnlcXGAgbXVsdGlwbGUgdGltZXMgaW5zdGVhZC5cbiAgICAgICAgICBgLnRyaW0oKVxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIChhd2FpdCBnZXRDbGllbnQoKSkucXVlcnkoLi4uYXJncyk7XG4gICAgfSxcbiAgICBQcmVsb2FkUXVlcnk6IFByZWxvYWRRdWVyeTJcbiAgfTtcbn1cbmZ1bmN0aW9uIG1ha2VHZXRDbGllbnQobWFrZUNsaWVudCkge1xuICBmdW5jdGlvbiBtYWtlV3JhcHBlZENsaWVudCgpIHtcbiAgICByZXR1cm4geyBjbGllbnQ6IG1ha2VDbGllbnQoKSB9O1xuICB9XG4gIGNvbnN0IGNhY2hlZE1ha2VXcmFwcGVkQ2xpZW50ID0gY2FjaGUobWFrZVdyYXBwZWRDbGllbnQpO1xuICBmdW5jdGlvbiBnZXRDbGllbnQoKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYFxuWW91IGNhbm5vdCBwYXNzIGFyZ3VtZW50cyBpbnRvIFxcYGdldENsaWVudFxcYC5cblBhc3NpbmcgYXJndW1lbnRzIHRvIFxcYGdldENsaWVudFxcYCByZXR1cm5zIGEgZGlmZmVyZW50IGluc3RhbmNlXG5vZiBBcG9sbG8gQ2xpZW50IGVhY2ggdGltZSBpdCBpcyBjYWxsZWQgd2l0aCBkaWZmZXJlbnQgYXJndW1lbnRzLCBwb3RlbnRpYWxseSBcbnJlc3VsdGluZyBpbiBkdXBsaWNhdGUgcmVxdWVzdHMgYW5kIGEgbm9uLWZ1bmN0aW9uYWwgY2FjaGUuIFxuICAgICAgYC50cmltKClcbiAgICAgICk7XG4gICAgfVxuICAgIGNvbnN0IHdyYXBwZXIgPSBjYWNoZWRNYWtlV3JhcHBlZENsaWVudCgpO1xuICAgIGlmIChzZWVuV3JhcHBlcnMgJiYgc2VlbkNsaWVudHMpIHtcbiAgICAgIGlmICghc2VlbldyYXBwZXJzLmhhcyh3cmFwcGVyKSkge1xuICAgICAgICBpZiAoc2VlbkNsaWVudHMuaGFzKHdyYXBwZXIuY2xpZW50KSkge1xuICAgICAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgICAgIGBcbk11bHRpcGxlIGNhbGxzIHRvIFxcYGdldENsaWVudFxcYCBmb3IgZGlmZmVyZW50IHJlcXVlc3RzIHJldHVybmVkIHRoZSBzYW1lIGNsaWVudCBpbnN0YW5jZS5cblRoaXMgbWVhbnMgdGhhdCBwcml2YXRlIHVzZXIgZGF0YSBjb3VsZCBhY2NpZGVudGFsbHkgYmUgc2hhcmVkIGJldHdlZW4gcmVxdWVzdHMuXG5UaGlzIGhhcHBlbnMsIGZvciBleGFtcGxlLCBpZiB5b3UgY3JlYXRlIGEgZ2xvYmFsIFxcYEFwb2xsb0NsaWVudFxcYCBpbnN0YW5jZSBhbmQgeW91ciBcXGBtYWtlQ2xpZW50XFxgXG5pbXBsZW1lbnRhdGlvbiBqdXN0IGxvb2tzIGxpa2UgXFxgKCkgPT4gY2xpZW50XFxgLlxuQWx3YXlzIGNhbGwgXFxgbmV3IEFwb2xsb0NsaWVudFxcYCAqKmluc2lkZSoqIHlvdXIgXFxgbWFrZUNsaWVudFxcYCBmdW5jdGlvbiBhbmRcbnJldHVybiBhIG5ldyBpbnN0YW5jZSBldmVyeSB0aW1lIFxcYG1ha2VDbGllbnRcXGAgaXMgY2FsbGVkLlxuYC50cmltKClcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHNlZW5XcmFwcGVycy5hZGQod3JhcHBlcik7XG4gICAgICAgIHNlZW5DbGllbnRzLmFkZCh3cmFwcGVyLmNsaWVudCk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB3cmFwcGVyLmNsaWVudDtcbiAgfVxuICByZXR1cm4gZ2V0Q2xpZW50O1xufVxuZnVuY3Rpb24gbWFrZVByZWxvYWRRdWVyeShnZXRDbGllbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFByZWxvYWRRdWVyeTIocHJvcHMpIHtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0Mi5jcmVhdGVFbGVtZW50KFByZWxvYWRRdWVyeSwgeyBnZXRDbGllbnQsIC4uLnByb3BzIH0pO1xuICB9O1xufVxudmFyIEFjY3VtdWxhdGVNdWx0aXBhcnRSZXNwb25zZXNMaW5rID0gY2xhc3MgZXh0ZW5kcyBBcG9sbG9MaW5rIHtcbiAgbWF4RGVsYXk7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5tYXhEZWxheSA9IGNvbmZpZy5jdXRvZmZEZWxheTtcbiAgfVxuICByZXF1ZXN0KG9wZXJhdGlvbiwgZm9yd2FyZCkge1xuICAgIGlmICghZm9yd2FyZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyBpcyBub3QgYSB0ZXJtaW5hbCBsaW5rIVwiKTtcbiAgICB9XG4gICAgY29uc3Qgb3BlcmF0aW9uQ29udGFpbnNNdWx0aXBhcnREaXJlY3RpdmVzID0gaGFzRGlyZWN0aXZlcyhcbiAgICAgIFtcImRlZmVyXCJdLFxuICAgICAgb3BlcmF0aW9uLnF1ZXJ5XG4gICAgKTtcbiAgICBjb25zdCB1cHN0cmVhbSA9IGZvcndhcmQob3BlcmF0aW9uKTtcbiAgICBpZiAoIW9wZXJhdGlvbkNvbnRhaW5zTXVsdGlwYXJ0RGlyZWN0aXZlcylcbiAgICAgIHJldHVybiB1cHN0cmVhbTtcbiAgICBjb25zdCBtYXhEZWxheSA9IHRoaXMubWF4RGVsYXk7XG4gICAgbGV0IGFjY3VtdWxhdGVkRGF0YSwgbWF4RGVsYXlUaW1lb3V0O1xuICAgIHJldHVybiBuZXcgT2JzZXJ2YWJsZSQxKChzdWJzY3JpYmVyKSA9PiB7XG4gICAgICBjb25zdCB1cHN0cmVhbVN1YnNjcmlwdGlvbiA9IHVwc3RyZWFtLnN1YnNjcmliZSh7XG4gICAgICAgIG5leHQ6IChyZXN1bHQpID0+IHtcbiAgICAgICAgICBpZiAoYWNjdW11bGF0ZWREYXRhKSB7XG4gICAgICAgICAgICBpZiAoYWNjdW11bGF0ZWREYXRhLmRhdGEgJiYgXCJpbmNyZW1lbnRhbFwiIGluIHJlc3VsdCkge1xuICAgICAgICAgICAgICBhY2N1bXVsYXRlZERhdGEuZGF0YSA9IG1lcmdlSW5jcmVtZW50YWxEYXRhKFxuICAgICAgICAgICAgICAgIGFjY3VtdWxhdGVkRGF0YS5kYXRhLFxuICAgICAgICAgICAgICAgIHJlc3VsdFxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChyZXN1bHQuZGF0YSkge1xuICAgICAgICAgICAgICBhY2N1bXVsYXRlZERhdGEuZGF0YSA9IHJlc3VsdC5kYXRhO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlc3VsdC5lcnJvcnMpIHtcbiAgICAgICAgICAgICAgYWNjdW11bGF0ZWREYXRhLmVycm9ycyA9IFtcbiAgICAgICAgICAgICAgICAuLi5hY2N1bXVsYXRlZERhdGEuZXJyb3JzIHx8IFtdLFxuICAgICAgICAgICAgICAgIC4uLnJlc3VsdC5lcnJvcnMgfHwgW11cbiAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZXN1bHQuZXh0ZW5zaW9ucylcbiAgICAgICAgICAgICAgYWNjdW11bGF0ZWREYXRhLmV4dGVuc2lvbnMgPSB7XG4gICAgICAgICAgICAgICAgLi4uYWNjdW11bGF0ZWREYXRhLmV4dGVuc2lvbnMsXG4gICAgICAgICAgICAgICAgLi4ucmVzdWx0LmV4dGVuc2lvbnNcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYWNjdW11bGF0ZWREYXRhID0gcmVzdWx0O1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoIW1heERlbGF5KSB7XG4gICAgICAgICAgICBmbHVzaEFjY3VtdWxhdGVkRGF0YSgpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoIW1heERlbGF5VGltZW91dCkge1xuICAgICAgICAgICAgbWF4RGVsYXlUaW1lb3V0ID0gc2V0VGltZW91dChmbHVzaEFjY3VtdWxhdGVkRGF0YSwgbWF4RGVsYXkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZXJyb3I6IChlcnJvcikgPT4ge1xuICAgICAgICAgIGlmIChtYXhEZWxheVRpbWVvdXQpXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQobWF4RGVsYXlUaW1lb3V0KTtcbiAgICAgICAgICBzdWJzY3JpYmVyLmVycm9yKGVycm9yKTtcbiAgICAgICAgfSxcbiAgICAgICAgY29tcGxldGU6ICgpID0+IHtcbiAgICAgICAgICBpZiAobWF4RGVsYXlUaW1lb3V0KSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQobWF4RGVsYXlUaW1lb3V0KTtcbiAgICAgICAgICAgIGZsdXNoQWNjdW11bGF0ZWREYXRhKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHN1YnNjcmliZXIuY29tcGxldGUoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBmdW5jdGlvbiBmbHVzaEFjY3VtdWxhdGVkRGF0YSgpIHtcbiAgICAgICAgc3Vic2NyaWJlci5uZXh0KGFjY3VtdWxhdGVkRGF0YSk7XG4gICAgICAgIHN1YnNjcmliZXIuY29tcGxldGUoKTtcbiAgICAgICAgdXBzdHJlYW1TdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmdW5jdGlvbiBjbGVhblVwKCkge1xuICAgICAgICBjbGVhclRpbWVvdXQobWF4RGVsYXlUaW1lb3V0KTtcbiAgICAgICAgdXBzdHJlYW1TdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cbn07XG5mdW5jdGlvbiBnZXREaXJlY3RpdmVBcmd1bWVudFZhbHVlKGRpcmVjdGl2ZSwgYXJndW1lbnQpIHtcbiAgcmV0dXJuIGRpcmVjdGl2ZS5hcmd1bWVudHM/LmZpbmQoKGFyZykgPT4gYXJnLm5hbWUudmFsdWUgPT09IGFyZ3VtZW50KT8udmFsdWU7XG59XG52YXIgUmVtb3ZlTXVsdGlwYXJ0RGlyZWN0aXZlc0xpbmsgPSBjbGFzcyBleHRlbmRzIEFwb2xsb0xpbmsge1xuICBzdHJpcERpcmVjdGl2ZXMgPSBbXTtcbiAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgc3VwZXIoKTtcbiAgICBpZiAoY29uZmlnLnN0cmlwRGVmZXIgIT09IGZhbHNlKVxuICAgICAgdGhpcy5zdHJpcERpcmVjdGl2ZXMucHVzaChcImRlZmVyXCIpO1xuICB9XG4gIHJlcXVlc3Qob3BlcmF0aW9uLCBmb3J3YXJkKSB7XG4gICAgaWYgKCFmb3J3YXJkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIGlzIG5vdCBhIHRlcm1pbmFsIGxpbmshXCIpO1xuICAgIH1cbiAgICBjb25zdCB7IHF1ZXJ5IH0gPSBvcGVyYXRpb247XG4gICAgbGV0IG1vZGlmaWVkUXVlcnkgPSBxdWVyeTtcbiAgICBtb2RpZmllZFF1ZXJ5ID0gcmVtb3ZlRGlyZWN0aXZlc0Zyb21Eb2N1bWVudChcbiAgICAgIHRoaXMuc3RyaXBEaXJlY3RpdmVzLm1hcCgoZGlyZWN0aXZlKSA9PiAoe1xuICAgICAgICB0ZXN0KG5vZGUpIHtcbiAgICAgICAgICBsZXQgc2hvdWxkU3RyaXAgPSBub2RlLmtpbmQgPT09IFwiRGlyZWN0aXZlXCIgJiYgbm9kZS5uYW1lLnZhbHVlID09PSBkaXJlY3RpdmU7XG4gICAgICAgICAgY29uc3QgbGFiZWwgPSBnZXREaXJlY3RpdmVBcmd1bWVudFZhbHVlKG5vZGUsIFwibGFiZWxcIik7XG4gICAgICAgICAgaWYgKGxhYmVsPy5raW5kID09PSBcIlN0cmluZ1ZhbHVlXCIgJiYgbGFiZWwudmFsdWUuc3RhcnRzV2l0aChcIlNzckRvbnRTdHJpcFwiKSkge1xuICAgICAgICAgICAgc2hvdWxkU3RyaXAgPSBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHNob3VsZFN0cmlwO1xuICAgICAgICB9LFxuICAgICAgICByZW1vdmU6IHRydWVcbiAgICAgIH0pKS5jb25jYXQoe1xuICAgICAgICB0ZXN0KG5vZGUpIHtcbiAgICAgICAgICBpZiAobm9kZS5raW5kICE9PSBcIkRpcmVjdGl2ZVwiKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIGNvbnN0IGxhYmVsID0gZ2V0RGlyZWN0aXZlQXJndW1lbnRWYWx1ZShub2RlLCBcImxhYmVsXCIpO1xuICAgICAgICAgIHJldHVybiBsYWJlbD8ua2luZCA9PT0gXCJTdHJpbmdWYWx1ZVwiICYmIGxhYmVsLnZhbHVlLnN0YXJ0c1dpdGgoXCJTc3JTdHJpcFwiKTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVtb3ZlOiB0cnVlXG4gICAgICB9KSxcbiAgICAgIG1vZGlmaWVkUXVlcnlcbiAgICApO1xuICAgIGlmIChtb2RpZmllZFF1ZXJ5ID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gT2JzZXJ2YWJsZSQxLm9mKHt9KTtcbiAgICB9XG4gICAgb3BlcmF0aW9uLnF1ZXJ5ID0gbW9kaWZpZWRRdWVyeTtcbiAgICByZXR1cm4gZm9yd2FyZChvcGVyYXRpb24pO1xuICB9XG59O1xudmFyIFNTUk11bHRpcGFydExpbmsgPSBjbGFzcyBleHRlbmRzIEFwb2xsb0xpbmsge1xuICBjb25zdHJ1Y3Rvcihjb25maWcgPSB7fSkge1xuICAgIGNvbnN0IGNvbWJpbmVkID0gQXBvbGxvTGluay5mcm9tKFtcbiAgICAgIG5ldyBSZW1vdmVNdWx0aXBhcnREaXJlY3RpdmVzTGluayh7XG4gICAgICAgIHN0cmlwRGVmZXI6IGNvbmZpZy5zdHJpcERlZmVyXG4gICAgICB9KSxcbiAgICAgIG5ldyBBY2N1bXVsYXRlTXVsdGlwYXJ0UmVzcG9uc2VzTGluayh7XG4gICAgICAgIGN1dG9mZkRlbGF5OiBjb25maWcuY3V0b2ZmRGVsYXkgfHwgMFxuICAgICAgfSlcbiAgICBdKTtcbiAgICBzdXBlcihjb21iaW5lZC5yZXF1ZXN0KTtcbiAgfVxufTtcbmNvbnN0IGJ1aWx0X2Zvcl9yc2MgPSB0cnVlO1xuXG5leHBvcnQgeyBBcG9sbG9DbGllbnQsIEFjY3VtdWxhdGVNdWx0aXBhcnRSZXNwb25zZXNMaW5rIGFzIERlYm91bmNlTXVsdGlwYXJ0UmVzcG9uc2VzTGluaywgSW5NZW1vcnlDYWNoZSwgUmVhZEZyb21SZWFkYWJsZVN0cmVhbUxpbmssIFJlbW92ZU11bHRpcGFydERpcmVjdGl2ZXNMaW5rLCBTU1JNdWx0aXBhcnRMaW5rLCBUZWVUb1JlYWRhYmxlU3RyZWFtTGluaywgYnVpbHRfZm9yX3JzYywgY3JlYXRlVHJhbnNwb3J0ZWRRdWVyeVByZWxvYWRlciwgaXNUcmFuc3BvcnRlZFF1ZXJ5UmVmLCByZWFkRnJvbVJlYWRhYmxlU3RyZWFtLCByZWdpc3RlckFwb2xsb0NsaWVudCwgcmV2aXZlVHJhbnNwb3J0ZWRRdWVyeVJlZiwgdGVlVG9SZWFkYWJsZVN0cmVhbSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3V0LmpzLm1hcFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgucnNjLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/index.rsc.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/stream-utils.js":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/stream-utils.js ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JSONDecodeStream: () => (/* binding */ JSONDecodeStream),\n/* harmony export */   JSONEncodeStream: () => (/* binding */ JSONEncodeStream),\n/* harmony export */   built_for_browser: () => (/* binding */ built_for_browser)\n/* harmony export */ });\n// src/stream-utils/JSONTransformStreams.tsx\nvar JSONEncodeStream = class extends TransformStream {\n  constructor() {\n    super({\n      transform(chunk, controller) {\n        controller.enqueue(JSON.stringify(chunk));\n      }\n    });\n  }\n};\nvar JSONDecodeStream = class extends TransformStream {\n  constructor() {\n    super({\n      transform(chunk, controller) {\n        if (typeof chunk !== \"string\") {\n          chunk = new TextDecoder().decode(chunk);\n        }\n        controller.enqueue(JSON.parse(chunk));\n      }\n    });\n  }\n};\nconst built_for_browser = true;\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=stream-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AYXBvbGxvK2NsaWVudC1yZWFjdC1zdHJlYW1pbmdAMC4xMi4yX0BhcG9sbG8rY2xpZW50QDMuMTMuOF9AdHlwZXMrcmVhY3RAMTkuMS42X2dyYXBocWwtd3NANi5fMm1kamEzaXl0NTZ3ZTd0cm5sb3VqM21vNWEvbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50LXJlYWN0LXN0cmVhbWluZy9kaXN0L3N0cmVhbS11dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFaUU7QUFDakU7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3VpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BhcG9sbG8rY2xpZW50LXJlYWN0LXN0cmVhbWluZ0AwLjEyLjJfQGFwb2xsbytjbGllbnRAMy4xMy44X0B0eXBlcytyZWFjdEAxOS4xLjZfZ3JhcGhxbC13c0A2Ll8ybWRqYTNpeXQ1NndlN3RybmxvdWozbW81YS9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQtcmVhY3Qtc3RyZWFtaW5nL2Rpc3Qvc3RyZWFtLXV0aWxzLmpzPzFmN2IiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3N0cmVhbS11dGlscy9KU09OVHJhbnNmb3JtU3RyZWFtcy50c3hcbnZhciBKU09ORW5jb2RlU3RyZWFtID0gY2xhc3MgZXh0ZW5kcyBUcmFuc2Zvcm1TdHJlYW0ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcih7XG4gICAgICB0cmFuc2Zvcm0oY2h1bmssIGNvbnRyb2xsZXIpIHtcbiAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEpTT04uc3RyaW5naWZ5KGNodW5rKSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn07XG52YXIgSlNPTkRlY29kZVN0cmVhbSA9IGNsYXNzIGV4dGVuZHMgVHJhbnNmb3JtU3RyZWFtIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoe1xuICAgICAgdHJhbnNmb3JtKGNodW5rLCBjb250cm9sbGVyKSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2h1bmsgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICBjaHVuayA9IG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShjaHVuayk7XG4gICAgICAgIH1cbiAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEpTT04ucGFyc2UoY2h1bmspKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufTtcbmNvbnN0IGJ1aWx0X2Zvcl9icm93c2VyID0gdHJ1ZTtcblxuZXhwb3J0IHsgSlNPTkRlY29kZVN0cmVhbSwgSlNPTkVuY29kZVN0cmVhbSwgYnVpbHRfZm9yX2Jyb3dzZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW91dC5qcy5tYXBcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0cmVhbS11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/.pnpm/@apollo+client-react-streaming@0.12.2_@apollo+client@3.13.8_@types+react@19.1.6_graphql-ws@6._2mdja3iyt56we7trnlouj3mo5a/node_modules/@apollo/client-react-streaming/dist/stream-utils.js\n");

/***/ })

};
;